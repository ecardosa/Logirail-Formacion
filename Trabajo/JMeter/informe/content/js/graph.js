/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 2305.0, "series": [{"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 18.0], [5.1, 18.0], [5.2, 18.0], [5.3, 18.0], [5.4, 18.0], [5.5, 18.0], [5.6, 18.0], [5.7, 18.0], [5.8, 18.0], [5.9, 18.0], [6.0, 18.0], [6.1, 18.0], [6.2, 18.0], [6.3, 18.0], [6.4, 18.0], [6.5, 18.0], [6.6, 18.0], [6.7, 55.0], [6.8, 55.0], [6.9, 55.0], [7.0, 55.0], [7.1, 55.0], [7.2, 55.0], [7.3, 55.0], [7.4, 55.0], [7.5, 55.0], [7.6, 55.0], [7.7, 55.0], [7.8, 55.0], [7.9, 55.0], [8.0, 55.0], [8.1, 55.0], [8.2, 55.0], [8.3, 55.0], [8.4, 71.0], [8.5, 71.0], [8.6, 71.0], [8.7, 71.0], [8.8, 71.0], [8.9, 71.0], [9.0, 71.0], [9.1, 71.0], [9.2, 71.0], [9.3, 71.0], [9.4, 71.0], [9.5, 71.0], [9.6, 71.0], [9.7, 71.0], [9.8, 71.0], [9.9, 71.0], [10.0, 76.0], [10.1, 76.0], [10.2, 76.0], [10.3, 76.0], [10.4, 76.0], [10.5, 76.0], [10.6, 76.0], [10.7, 76.0], [10.8, 76.0], [10.9, 76.0], [11.0, 76.0], [11.1, 76.0], [11.2, 76.0], [11.3, 76.0], [11.4, 76.0], [11.5, 76.0], [11.6, 76.0], [11.7, 77.0], [11.8, 77.0], [11.9, 77.0], [12.0, 77.0], [12.1, 77.0], [12.2, 77.0], [12.3, 77.0], [12.4, 77.0], [12.5, 77.0], [12.6, 77.0], [12.7, 77.0], [12.8, 77.0], [12.9, 77.0], [13.0, 77.0], [13.1, 77.0], [13.2, 77.0], [13.3, 77.0], [13.4, 80.0], [13.5, 80.0], [13.6, 80.0], [13.7, 80.0], [13.8, 80.0], [13.9, 80.0], [14.0, 80.0], [14.1, 80.0], [14.2, 80.0], [14.3, 80.0], [14.4, 80.0], [14.5, 80.0], [14.6, 80.0], [14.7, 80.0], [14.8, 80.0], [14.9, 80.0], [15.0, 115.0], [15.1, 115.0], [15.2, 115.0], [15.3, 115.0], [15.4, 115.0], [15.5, 115.0], [15.6, 115.0], [15.7, 115.0], [15.8, 115.0], [15.9, 115.0], [16.0, 115.0], [16.1, 115.0], [16.2, 115.0], [16.3, 115.0], [16.4, 115.0], [16.5, 115.0], [16.6, 115.0], [16.7, 116.0], [16.8, 116.0], [16.9, 116.0], [17.0, 116.0], [17.1, 116.0], [17.2, 116.0], [17.3, 116.0], [17.4, 116.0], [17.5, 116.0], [17.6, 116.0], [17.7, 116.0], [17.8, 116.0], [17.9, 116.0], [18.0, 116.0], [18.1, 116.0], [18.2, 116.0], [18.3, 116.0], [18.4, 125.0], [18.5, 125.0], [18.6, 125.0], [18.7, 125.0], [18.8, 125.0], [18.9, 125.0], [19.0, 125.0], [19.1, 125.0], [19.2, 125.0], [19.3, 125.0], [19.4, 125.0], [19.5, 125.0], [19.6, 125.0], [19.7, 125.0], [19.8, 125.0], [19.9, 125.0], [20.0, 132.0], [20.1, 132.0], [20.2, 132.0], [20.3, 132.0], [20.4, 132.0], [20.5, 132.0], [20.6, 132.0], [20.7, 132.0], [20.8, 132.0], [20.9, 132.0], [21.0, 132.0], [21.1, 132.0], [21.2, 132.0], [21.3, 132.0], [21.4, 132.0], [21.5, 132.0], [21.6, 132.0], [21.7, 132.0], [21.8, 132.0], [21.9, 132.0], [22.0, 132.0], [22.1, 132.0], [22.2, 132.0], [22.3, 132.0], [22.4, 132.0], [22.5, 132.0], [22.6, 132.0], [22.7, 132.0], [22.8, 132.0], [22.9, 132.0], [23.0, 132.0], [23.1, 132.0], [23.2, 132.0], [23.3, 132.0], [23.4, 174.0], [23.5, 174.0], [23.6, 174.0], [23.7, 174.0], [23.8, 174.0], [23.9, 174.0], [24.0, 174.0], [24.1, 174.0], [24.2, 174.0], [24.3, 174.0], [24.4, 174.0], [24.5, 174.0], [24.6, 174.0], [24.7, 174.0], [24.8, 174.0], [24.9, 174.0], [25.0, 175.0], [25.1, 175.0], [25.2, 175.0], [25.3, 175.0], [25.4, 175.0], [25.5, 175.0], [25.6, 175.0], [25.7, 175.0], [25.8, 175.0], [25.9, 175.0], [26.0, 175.0], [26.1, 175.0], [26.2, 175.0], [26.3, 175.0], [26.4, 175.0], [26.5, 175.0], [26.6, 175.0], [26.7, 185.0], [26.8, 185.0], [26.9, 185.0], [27.0, 185.0], [27.1, 185.0], [27.2, 185.0], [27.3, 185.0], [27.4, 185.0], [27.5, 185.0], [27.6, 185.0], [27.7, 185.0], [27.8, 185.0], [27.9, 185.0], [28.0, 185.0], [28.1, 185.0], [28.2, 185.0], [28.3, 185.0], [28.4, 198.0], [28.5, 198.0], [28.6, 198.0], [28.7, 198.0], [28.8, 198.0], [28.9, 198.0], [29.0, 198.0], [29.1, 198.0], [29.2, 198.0], [29.3, 198.0], [29.4, 198.0], [29.5, 198.0], [29.6, 198.0], [29.7, 198.0], [29.8, 198.0], [29.9, 198.0], [30.0, 198.0], [30.1, 212.0], [30.2, 212.0], [30.3, 212.0], [30.4, 212.0], [30.5, 212.0], [30.6, 212.0], [30.7, 212.0], [30.8, 212.0], [30.9, 212.0], [31.0, 212.0], [31.1, 212.0], [31.2, 212.0], [31.3, 212.0], [31.4, 212.0], [31.5, 212.0], [31.6, 212.0], [31.7, 224.0], [31.8, 224.0], [31.9, 224.0], [32.0, 224.0], [32.1, 224.0], [32.2, 224.0], [32.3, 224.0], [32.4, 224.0], [32.5, 224.0], [32.6, 224.0], [32.7, 224.0], [32.8, 224.0], [32.9, 224.0], [33.0, 224.0], [33.1, 224.0], [33.2, 224.0], [33.3, 224.0], [33.4, 254.0], [33.5, 254.0], [33.6, 254.0], [33.7, 254.0], [33.8, 254.0], [33.9, 254.0], [34.0, 254.0], [34.1, 254.0], [34.2, 254.0], [34.3, 254.0], [34.4, 254.0], [34.5, 254.0], [34.6, 254.0], [34.7, 254.0], [34.8, 254.0], [34.9, 254.0], [35.0, 263.0], [35.1, 263.0], [35.2, 263.0], [35.3, 263.0], [35.4, 263.0], [35.5, 263.0], [35.6, 263.0], [35.7, 263.0], [35.8, 263.0], [35.9, 263.0], [36.0, 263.0], [36.1, 263.0], [36.2, 263.0], [36.3, 263.0], [36.4, 263.0], [36.5, 263.0], [36.6, 263.0], [36.7, 265.0], [36.8, 265.0], [36.9, 265.0], [37.0, 265.0], [37.1, 265.0], [37.2, 265.0], [37.3, 265.0], [37.4, 265.0], [37.5, 265.0], [37.6, 265.0], [37.7, 265.0], [37.8, 265.0], [37.9, 265.0], [38.0, 265.0], [38.1, 265.0], [38.2, 265.0], [38.3, 265.0], [38.4, 315.0], [38.5, 315.0], [38.6, 315.0], [38.7, 315.0], [38.8, 315.0], [38.9, 315.0], [39.0, 315.0], [39.1, 315.0], [39.2, 315.0], [39.3, 315.0], [39.4, 315.0], [39.5, 315.0], [39.6, 315.0], [39.7, 315.0], [39.8, 315.0], [39.9, 315.0], [40.0, 325.0], [40.1, 325.0], [40.2, 325.0], [40.3, 325.0], [40.4, 325.0], [40.5, 325.0], [40.6, 325.0], [40.7, 325.0], [40.8, 325.0], [40.9, 325.0], [41.0, 325.0], [41.1, 325.0], [41.2, 325.0], [41.3, 325.0], [41.4, 325.0], [41.5, 325.0], [41.6, 325.0], [41.7, 329.0], [41.8, 329.0], [41.9, 329.0], [42.0, 329.0], [42.1, 329.0], [42.2, 329.0], [42.3, 329.0], [42.4, 329.0], [42.5, 329.0], [42.6, 329.0], [42.7, 329.0], [42.8, 329.0], [42.9, 329.0], [43.0, 329.0], [43.1, 329.0], [43.2, 329.0], [43.3, 329.0], [43.4, 370.0], [43.5, 370.0], [43.6, 370.0], [43.7, 370.0], [43.8, 370.0], [43.9, 370.0], [44.0, 370.0], [44.1, 370.0], [44.2, 370.0], [44.3, 370.0], [44.4, 370.0], [44.5, 370.0], [44.6, 370.0], [44.7, 370.0], [44.8, 370.0], [44.9, 370.0], [45.0, 388.0], [45.1, 388.0], [45.2, 388.0], [45.3, 388.0], [45.4, 388.0], [45.5, 388.0], [45.6, 388.0], [45.7, 388.0], [45.8, 388.0], [45.9, 388.0], [46.0, 388.0], [46.1, 388.0], [46.2, 388.0], [46.3, 388.0], [46.4, 388.0], [46.5, 388.0], [46.6, 388.0], [46.7, 388.0], [46.8, 388.0], [46.9, 388.0], [47.0, 388.0], [47.1, 388.0], [47.2, 388.0], [47.3, 388.0], [47.4, 388.0], [47.5, 388.0], [47.6, 388.0], [47.7, 388.0], [47.8, 388.0], [47.9, 388.0], [48.0, 388.0], [48.1, 388.0], [48.2, 388.0], [48.3, 388.0], [48.4, 394.0], [48.5, 394.0], [48.6, 394.0], [48.7, 394.0], [48.8, 394.0], [48.9, 394.0], [49.0, 394.0], [49.1, 394.0], [49.2, 394.0], [49.3, 394.0], [49.4, 394.0], [49.5, 394.0], [49.6, 394.0], [49.7, 394.0], [49.8, 394.0], [49.9, 394.0], [50.0, 409.0], [50.1, 409.0], [50.2, 409.0], [50.3, 409.0], [50.4, 409.0], [50.5, 409.0], [50.6, 409.0], [50.7, 409.0], [50.8, 409.0], [50.9, 409.0], [51.0, 409.0], [51.1, 409.0], [51.2, 409.0], [51.3, 409.0], [51.4, 409.0], [51.5, 409.0], [51.6, 409.0], [51.7, 437.0], [51.8, 437.0], [51.9, 437.0], [52.0, 437.0], [52.1, 437.0], [52.2, 437.0], [52.3, 437.0], [52.4, 437.0], [52.5, 437.0], [52.6, 437.0], [52.7, 437.0], [52.8, 437.0], [52.9, 437.0], [53.0, 437.0], [53.1, 437.0], [53.2, 437.0], [53.3, 437.0], [53.4, 440.0], [53.5, 440.0], [53.6, 440.0], [53.7, 440.0], [53.8, 440.0], [53.9, 440.0], [54.0, 440.0], [54.1, 440.0], [54.2, 440.0], [54.3, 440.0], [54.4, 440.0], [54.5, 440.0], [54.6, 440.0], [54.7, 440.0], [54.8, 440.0], [54.9, 440.0], [55.0, 445.0], [55.1, 445.0], [55.2, 445.0], [55.3, 445.0], [55.4, 445.0], [55.5, 445.0], [55.6, 445.0], [55.7, 445.0], [55.8, 445.0], [55.9, 445.0], [56.0, 445.0], [56.1, 445.0], [56.2, 445.0], [56.3, 445.0], [56.4, 445.0], [56.5, 445.0], [56.6, 445.0], [56.7, 452.0], [56.8, 452.0], [56.9, 452.0], [57.0, 452.0], [57.1, 452.0], [57.2, 452.0], [57.3, 452.0], [57.4, 452.0], [57.5, 452.0], [57.6, 452.0], [57.7, 452.0], [57.8, 452.0], [57.9, 452.0], [58.0, 452.0], [58.1, 452.0], [58.2, 452.0], [58.3, 452.0], [58.4, 467.0], [58.5, 467.0], [58.6, 467.0], [58.7, 467.0], [58.8, 467.0], [58.9, 467.0], [59.0, 467.0], [59.1, 467.0], [59.2, 467.0], [59.3, 467.0], [59.4, 467.0], [59.5, 467.0], [59.6, 467.0], [59.7, 467.0], [59.8, 467.0], [59.9, 467.0], [60.0, 497.0], [60.1, 497.0], [60.2, 497.0], [60.3, 497.0], [60.4, 497.0], [60.5, 497.0], [60.6, 497.0], [60.7, 497.0], [60.8, 497.0], [60.9, 497.0], [61.0, 497.0], [61.1, 497.0], [61.2, 497.0], [61.3, 497.0], [61.4, 497.0], [61.5, 497.0], [61.6, 497.0], [61.7, 525.0], [61.8, 525.0], [61.9, 525.0], [62.0, 525.0], [62.1, 525.0], [62.2, 525.0], [62.3, 525.0], [62.4, 525.0], [62.5, 525.0], [62.6, 525.0], [62.7, 525.0], [62.8, 525.0], [62.9, 525.0], [63.0, 525.0], [63.1, 525.0], [63.2, 525.0], [63.3, 525.0], [63.4, 581.0], [63.5, 581.0], [63.6, 581.0], [63.7, 581.0], [63.8, 581.0], [63.9, 581.0], [64.0, 581.0], [64.1, 581.0], [64.2, 581.0], [64.3, 581.0], [64.4, 581.0], [64.5, 581.0], [64.6, 581.0], [64.7, 581.0], [64.8, 581.0], [64.9, 581.0], [65.0, 582.0], [65.1, 582.0], [65.2, 582.0], [65.3, 582.0], [65.4, 582.0], [65.5, 582.0], [65.6, 582.0], [65.7, 582.0], [65.8, 582.0], [65.9, 582.0], [66.0, 582.0], [66.1, 582.0], [66.2, 582.0], [66.3, 582.0], [66.4, 582.0], [66.5, 582.0], [66.6, 582.0], [66.7, 610.0], [66.8, 610.0], [66.9, 610.0], [67.0, 610.0], [67.1, 610.0], [67.2, 610.0], [67.3, 610.0], [67.4, 610.0], [67.5, 610.0], [67.6, 610.0], [67.7, 610.0], [67.8, 610.0], [67.9, 610.0], [68.0, 610.0], [68.1, 610.0], [68.2, 610.0], [68.3, 610.0], [68.4, 638.0], [68.5, 638.0], [68.6, 638.0], [68.7, 638.0], [68.8, 638.0], [68.9, 638.0], [69.0, 638.0], [69.1, 638.0], [69.2, 638.0], [69.3, 638.0], [69.4, 638.0], [69.5, 638.0], [69.6, 638.0], [69.7, 638.0], [69.8, 638.0], [69.9, 638.0], [70.0, 640.0], [70.1, 640.0], [70.2, 640.0], [70.3, 640.0], [70.4, 640.0], [70.5, 640.0], [70.6, 640.0], [70.7, 640.0], [70.8, 640.0], [70.9, 640.0], [71.0, 640.0], [71.1, 640.0], [71.2, 640.0], [71.3, 640.0], [71.4, 640.0], [71.5, 640.0], [71.6, 640.0], [71.7, 664.0], [71.8, 664.0], [71.9, 664.0], [72.0, 664.0], [72.1, 664.0], [72.2, 664.0], [72.3, 664.0], [72.4, 664.0], [72.5, 664.0], [72.6, 664.0], [72.7, 664.0], [72.8, 664.0], [72.9, 664.0], [73.0, 664.0], [73.1, 664.0], [73.2, 664.0], [73.3, 664.0], [73.4, 671.0], [73.5, 671.0], [73.6, 671.0], [73.7, 671.0], [73.8, 671.0], [73.9, 671.0], [74.0, 671.0], [74.1, 671.0], [74.2, 671.0], [74.3, 671.0], [74.4, 671.0], [74.5, 671.0], [74.6, 671.0], [74.7, 671.0], [74.8, 671.0], [74.9, 671.0], [75.0, 692.0], [75.1, 692.0], [75.2, 692.0], [75.3, 692.0], [75.4, 692.0], [75.5, 692.0], [75.6, 692.0], [75.7, 692.0], [75.8, 692.0], [75.9, 692.0], [76.0, 692.0], [76.1, 692.0], [76.2, 692.0], [76.3, 692.0], [76.4, 692.0], [76.5, 692.0], [76.6, 692.0], [76.7, 695.0], [76.8, 695.0], [76.9, 695.0], [77.0, 695.0], [77.1, 695.0], [77.2, 695.0], [77.3, 695.0], [77.4, 695.0], [77.5, 695.0], [77.6, 695.0], [77.7, 695.0], [77.8, 695.0], [77.9, 695.0], [78.0, 695.0], [78.1, 695.0], [78.2, 695.0], [78.3, 695.0], [78.4, 714.0], [78.5, 714.0], [78.6, 714.0], [78.7, 714.0], [78.8, 714.0], [78.9, 714.0], [79.0, 714.0], [79.1, 714.0], [79.2, 714.0], [79.3, 714.0], [79.4, 714.0], [79.5, 714.0], [79.6, 714.0], [79.7, 714.0], [79.8, 714.0], [79.9, 714.0], [80.0, 714.0], [80.1, 723.0], [80.2, 723.0], [80.3, 723.0], [80.4, 723.0], [80.5, 723.0], [80.6, 723.0], [80.7, 723.0], [80.8, 723.0], [80.9, 723.0], [81.0, 723.0], [81.1, 723.0], [81.2, 723.0], [81.3, 723.0], [81.4, 723.0], [81.5, 723.0], [81.6, 723.0], [81.7, 743.0], [81.8, 743.0], [81.9, 743.0], [82.0, 743.0], [82.1, 743.0], [82.2, 743.0], [82.3, 743.0], [82.4, 743.0], [82.5, 743.0], [82.6, 743.0], [82.7, 743.0], [82.8, 743.0], [82.9, 743.0], [83.0, 743.0], [83.1, 743.0], [83.2, 743.0], [83.3, 743.0], [83.4, 768.0], [83.5, 768.0], [83.6, 768.0], [83.7, 768.0], [83.8, 768.0], [83.9, 768.0], [84.0, 768.0], [84.1, 768.0], [84.2, 768.0], [84.3, 768.0], [84.4, 768.0], [84.5, 768.0], [84.6, 768.0], [84.7, 768.0], [84.8, 768.0], [84.9, 768.0], [85.0, 768.0], [85.1, 797.0], [85.2, 797.0], [85.3, 797.0], [85.4, 797.0], [85.5, 797.0], [85.6, 797.0], [85.7, 797.0], [85.8, 797.0], [85.9, 797.0], [86.0, 797.0], [86.1, 797.0], [86.2, 797.0], [86.3, 797.0], [86.4, 797.0], [86.5, 797.0], [86.6, 797.0], [86.7, 845.0], [86.8, 845.0], [86.9, 845.0], [87.0, 845.0], [87.1, 845.0], [87.2, 845.0], [87.3, 845.0], [87.4, 845.0], [87.5, 845.0], [87.6, 845.0], [87.7, 845.0], [87.8, 845.0], [87.9, 845.0], [88.0, 845.0], [88.1, 845.0], [88.2, 845.0], [88.3, 845.0], [88.4, 894.0], [88.5, 894.0], [88.6, 894.0], [88.7, 894.0], [88.8, 894.0], [88.9, 894.0], [89.0, 894.0], [89.1, 894.0], [89.2, 894.0], [89.3, 894.0], [89.4, 894.0], [89.5, 894.0], [89.6, 894.0], [89.7, 894.0], [89.8, 894.0], [89.9, 894.0], [90.0, 894.0], [90.1, 929.0], [90.2, 929.0], [90.3, 929.0], [90.4, 929.0], [90.5, 929.0], [90.6, 929.0], [90.7, 929.0], [90.8, 929.0], [90.9, 929.0], [91.0, 929.0], [91.1, 929.0], [91.2, 929.0], [91.3, 929.0], [91.4, 929.0], [91.5, 929.0], [91.6, 929.0], [91.7, 981.0], [91.8, 981.0], [91.9, 981.0], [92.0, 981.0], [92.1, 981.0], [92.2, 981.0], [92.3, 981.0], [92.4, 981.0], [92.5, 981.0], [92.6, 981.0], [92.7, 981.0], [92.8, 981.0], [92.9, 981.0], [93.0, 981.0], [93.1, 981.0], [93.2, 981.0], [93.3, 981.0], [93.4, 1211.0], [93.5, 1211.0], [93.6, 1211.0], [93.7, 1211.0], [93.8, 1211.0], [93.9, 1211.0], [94.0, 1211.0], [94.1, 1211.0], [94.2, 1211.0], [94.3, 1211.0], [94.4, 1211.0], [94.5, 1211.0], [94.6, 1211.0], [94.7, 1211.0], [94.8, 1211.0], [94.9, 1211.0], [95.0, 1211.0], [95.1, 1270.0], [95.2, 1270.0], [95.3, 1270.0], [95.4, 1270.0], [95.5, 1270.0], [95.6, 1270.0], [95.7, 1270.0], [95.8, 1270.0], [95.9, 1270.0], [96.0, 1270.0], [96.1, 1270.0], [96.2, 1270.0], [96.3, 1270.0], [96.4, 1270.0], [96.5, 1270.0], [96.6, 1270.0], [96.7, 1326.0], [96.8, 1326.0], [96.9, 1326.0], [97.0, 1326.0], [97.1, 1326.0], [97.2, 1326.0], [97.3, 1326.0], [97.4, 1326.0], [97.5, 1326.0], [97.6, 1326.0], [97.7, 1326.0], [97.8, 1326.0], [97.9, 1326.0], [98.0, 1326.0], [98.1, 1326.0], [98.2, 1326.0], [98.3, 1326.0], [98.4, 1388.0], [98.5, 1388.0], [98.6, 1388.0], [98.7, 1388.0], [98.8, 1388.0], [98.9, 1388.0], [99.0, 1388.0], [99.1, 1388.0], [99.2, 1388.0], [99.3, 1388.0], [99.4, 1388.0], [99.5, 1388.0], [99.6, 1388.0], [99.7, 1388.0], [99.8, 1388.0], [99.9, 1388.0], [100.0, 1388.0]], "isOverall": false, "label": "contactos pagina", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 4.0], [3.5, 4.0], [3.6, 4.0], [3.7, 4.0], [3.8, 4.0], [3.9, 4.0], [4.0, 4.0], [4.1, 4.0], [4.2, 4.0], [4.3, 4.0], [4.4, 4.0], [4.5, 4.0], [4.6, 4.0], [4.7, 4.0], [4.8, 4.0], [4.9, 4.0], [5.0, 4.0], [5.1, 4.0], [5.2, 4.0], [5.3, 4.0], [5.4, 4.0], [5.5, 4.0], [5.6, 4.0], [5.7, 4.0], [5.8, 4.0], [5.9, 4.0], [6.0, 4.0], [6.1, 4.0], [6.2, 4.0], [6.3, 4.0], [6.4, 4.0], [6.5, 4.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 26.0], [7.5, 26.0], [7.6, 26.0], [7.7, 26.0], [7.8, 26.0], [7.9, 26.0], [8.0, 26.0], [8.1, 26.0], [8.2, 43.0], [8.3, 43.0], [8.4, 43.0], [8.5, 43.0], [8.6, 43.0], [8.7, 43.0], [8.8, 43.0], [8.9, 43.0], [9.0, 43.0], [9.1, 43.0], [9.2, 43.0], [9.3, 43.0], [9.4, 43.0], [9.5, 43.0], [9.6, 43.0], [9.7, 43.0], [9.8, 43.0], [9.9, 55.0], [10.0, 55.0], [10.1, 55.0], [10.2, 55.0], [10.3, 55.0], [10.4, 55.0], [10.5, 55.0], [10.6, 55.0], [10.7, 69.0], [10.8, 69.0], [10.9, 69.0], [11.0, 69.0], [11.1, 69.0], [11.2, 69.0], [11.3, 69.0], [11.4, 69.0], [11.5, 86.0], [11.6, 86.0], [11.7, 86.0], [11.8, 86.0], [11.9, 86.0], [12.0, 86.0], [12.1, 86.0], [12.2, 86.0], [12.3, 91.0], [12.4, 91.0], [12.5, 91.0], [12.6, 91.0], [12.7, 91.0], [12.8, 91.0], [12.9, 91.0], [13.0, 91.0], [13.1, 91.0], [13.2, 102.0], [13.3, 102.0], [13.4, 102.0], [13.5, 102.0], [13.6, 102.0], [13.7, 102.0], [13.8, 102.0], [13.9, 102.0], [14.0, 115.0], [14.1, 115.0], [14.2, 115.0], [14.3, 115.0], [14.4, 115.0], [14.5, 115.0], [14.6, 115.0], [14.7, 115.0], [14.8, 135.0], [14.9, 135.0], [15.0, 135.0], [15.1, 135.0], [15.2, 135.0], [15.3, 135.0], [15.4, 135.0], [15.5, 135.0], [15.6, 148.0], [15.7, 148.0], [15.8, 148.0], [15.9, 148.0], [16.0, 148.0], [16.1, 148.0], [16.2, 148.0], [16.3, 148.0], [16.4, 149.0], [16.5, 149.0], [16.6, 149.0], [16.7, 149.0], [16.8, 149.0], [16.9, 149.0], [17.0, 149.0], [17.1, 149.0], [17.2, 149.0], [17.3, 164.0], [17.4, 164.0], [17.5, 164.0], [17.6, 164.0], [17.7, 164.0], [17.8, 164.0], [17.9, 164.0], [18.0, 164.0], [18.1, 168.0], [18.2, 168.0], [18.3, 168.0], [18.4, 168.0], [18.5, 168.0], [18.6, 168.0], [18.7, 168.0], [18.8, 168.0], [18.9, 170.0], [19.0, 170.0], [19.1, 170.0], [19.2, 170.0], [19.3, 170.0], [19.4, 170.0], [19.5, 170.0], [19.6, 170.0], [19.7, 182.0], [19.8, 182.0], [19.9, 182.0], [20.0, 182.0], [20.1, 182.0], [20.2, 182.0], [20.3, 182.0], [20.4, 182.0], [20.5, 193.0], [20.6, 193.0], [20.7, 193.0], [20.8, 193.0], [20.9, 193.0], [21.0, 193.0], [21.1, 193.0], [21.2, 193.0], [21.3, 193.0], [21.4, 208.0], [21.5, 208.0], [21.6, 208.0], [21.7, 208.0], [21.8, 208.0], [21.9, 208.0], [22.0, 208.0], [22.1, 208.0], [22.2, 209.0], [22.3, 209.0], [22.4, 209.0], [22.5, 209.0], [22.6, 209.0], [22.7, 209.0], [22.8, 209.0], [22.9, 209.0], [23.0, 231.0], [23.1, 231.0], [23.2, 231.0], [23.3, 231.0], [23.4, 231.0], [23.5, 231.0], [23.6, 231.0], [23.7, 231.0], [23.8, 242.0], [23.9, 242.0], [24.0, 242.0], [24.1, 242.0], [24.2, 242.0], [24.3, 242.0], [24.4, 242.0], [24.5, 242.0], [24.6, 254.0], [24.7, 254.0], [24.8, 254.0], [24.9, 254.0], [25.0, 254.0], [25.1, 254.0], [25.2, 254.0], [25.3, 254.0], [25.4, 254.0], [25.5, 262.0], [25.6, 262.0], [25.7, 262.0], [25.8, 262.0], [25.9, 262.0], [26.0, 262.0], [26.1, 262.0], [26.2, 262.0], [26.3, 278.0], [26.4, 278.0], [26.5, 278.0], [26.6, 278.0], [26.7, 278.0], [26.8, 278.0], [26.9, 278.0], [27.0, 278.0], [27.1, 289.0], [27.2, 289.0], [27.3, 289.0], [27.4, 289.0], [27.5, 289.0], [27.6, 289.0], [27.7, 289.0], [27.8, 289.0], [27.9, 293.0], [28.0, 293.0], [28.1, 293.0], [28.2, 293.0], [28.3, 293.0], [28.4, 293.0], [28.5, 293.0], [28.6, 293.0], [28.7, 296.0], [28.8, 296.0], [28.9, 296.0], [29.0, 296.0], [29.1, 296.0], [29.2, 296.0], [29.3, 296.0], [29.4, 296.0], [29.5, 296.0], [29.6, 311.0], [29.7, 311.0], [29.8, 311.0], [29.9, 311.0], [30.0, 311.0], [30.1, 311.0], [30.2, 311.0], [30.3, 311.0], [30.4, 336.0], [30.5, 336.0], [30.6, 336.0], [30.7, 336.0], [30.8, 336.0], [30.9, 336.0], [31.0, 336.0], [31.1, 336.0], [31.2, 338.0], [31.3, 338.0], [31.4, 338.0], [31.5, 338.0], [31.6, 338.0], [31.7, 338.0], [31.8, 338.0], [31.9, 338.0], [32.0, 344.0], [32.1, 344.0], [32.2, 344.0], [32.3, 344.0], [32.4, 344.0], [32.5, 344.0], [32.6, 344.0], [32.7, 344.0], [32.8, 357.0], [32.9, 357.0], [33.0, 357.0], [33.1, 357.0], [33.2, 357.0], [33.3, 357.0], [33.4, 357.0], [33.5, 357.0], [33.6, 357.0], [33.7, 384.0], [33.8, 384.0], [33.9, 384.0], [34.0, 384.0], [34.1, 384.0], [34.2, 384.0], [34.3, 384.0], [34.4, 384.0], [34.5, 385.0], [34.6, 385.0], [34.7, 385.0], [34.8, 385.0], [34.9, 385.0], [35.0, 385.0], [35.1, 385.0], [35.2, 385.0], [35.3, 424.0], [35.4, 424.0], [35.5, 424.0], [35.6, 424.0], [35.7, 424.0], [35.8, 424.0], [35.9, 424.0], [36.0, 424.0], [36.1, 425.0], [36.2, 425.0], [36.3, 425.0], [36.4, 425.0], [36.5, 425.0], [36.6, 425.0], [36.7, 425.0], [36.8, 425.0], [36.9, 431.0], [37.0, 431.0], [37.1, 431.0], [37.2, 431.0], [37.3, 431.0], [37.4, 431.0], [37.5, 431.0], [37.6, 431.0], [37.7, 431.0], [37.8, 433.0], [37.9, 433.0], [38.0, 433.0], [38.1, 433.0], [38.2, 433.0], [38.3, 433.0], [38.4, 433.0], [38.5, 433.0], [38.6, 475.0], [38.7, 475.0], [38.8, 475.0], [38.9, 475.0], [39.0, 475.0], [39.1, 475.0], [39.2, 475.0], [39.3, 475.0], [39.4, 477.0], [39.5, 477.0], [39.6, 477.0], [39.7, 477.0], [39.8, 477.0], [39.9, 477.0], [40.0, 477.0], [40.1, 477.0], [40.2, 478.0], [40.3, 478.0], [40.4, 478.0], [40.5, 478.0], [40.6, 478.0], [40.7, 478.0], [40.8, 478.0], [40.9, 478.0], [41.0, 478.0], [41.1, 478.0], [41.2, 478.0], [41.3, 478.0], [41.4, 478.0], [41.5, 478.0], [41.6, 478.0], [41.7, 478.0], [41.8, 478.0], [41.9, 516.0], [42.0, 516.0], [42.1, 516.0], [42.2, 516.0], [42.3, 516.0], [42.4, 516.0], [42.5, 516.0], [42.6, 516.0], [42.7, 518.0], [42.8, 518.0], [42.9, 518.0], [43.0, 518.0], [43.1, 518.0], [43.2, 518.0], [43.3, 518.0], [43.4, 518.0], [43.5, 519.0], [43.6, 519.0], [43.7, 519.0], [43.8, 519.0], [43.9, 519.0], [44.0, 519.0], [44.1, 519.0], [44.2, 519.0], [44.3, 519.0], [44.4, 519.0], [44.5, 519.0], [44.6, 519.0], [44.7, 519.0], [44.8, 519.0], [44.9, 519.0], [45.0, 519.0], [45.1, 519.0], [45.2, 519.0], [45.3, 519.0], [45.4, 519.0], [45.5, 519.0], [45.6, 519.0], [45.7, 519.0], [45.8, 519.0], [45.9, 519.0], [46.0, 519.0], [46.1, 519.0], [46.2, 519.0], [46.3, 519.0], [46.4, 519.0], [46.5, 519.0], [46.6, 519.0], [46.7, 519.0], [46.8, 520.0], [46.9, 520.0], [47.0, 520.0], [47.1, 520.0], [47.2, 520.0], [47.3, 520.0], [47.4, 520.0], [47.5, 520.0], [47.6, 520.0], [47.7, 520.0], [47.8, 520.0], [47.9, 520.0], [48.0, 520.0], [48.1, 520.0], [48.2, 520.0], [48.3, 520.0], [48.4, 526.0], [48.5, 526.0], [48.6, 526.0], [48.7, 526.0], [48.8, 526.0], [48.9, 526.0], [49.0, 526.0], [49.1, 526.0], [49.2, 527.0], [49.3, 527.0], [49.4, 527.0], [49.5, 527.0], [49.6, 527.0], [49.7, 527.0], [49.8, 527.0], [49.9, 527.0], [50.0, 527.0], [50.1, 528.0], [50.2, 528.0], [50.3, 528.0], [50.4, 528.0], [50.5, 528.0], [50.6, 528.0], [50.7, 528.0], [50.8, 528.0], [50.9, 571.0], [51.0, 571.0], [51.1, 571.0], [51.2, 571.0], [51.3, 571.0], [51.4, 571.0], [51.5, 571.0], [51.6, 571.0], [51.7, 574.0], [51.8, 574.0], [51.9, 574.0], [52.0, 574.0], [52.1, 574.0], [52.2, 574.0], [52.3, 574.0], [52.4, 574.0], [52.5, 575.0], [52.6, 575.0], [52.7, 575.0], [52.8, 575.0], [52.9, 575.0], [53.0, 575.0], [53.1, 575.0], [53.2, 575.0], [53.3, 576.0], [53.4, 576.0], [53.5, 576.0], [53.6, 576.0], [53.7, 576.0], [53.8, 576.0], [53.9, 576.0], [54.0, 576.0], [54.1, 616.0], [54.2, 616.0], [54.3, 616.0], [54.4, 616.0], [54.5, 616.0], [54.6, 616.0], [54.7, 616.0], [54.8, 616.0], [54.9, 616.0], [55.0, 621.0], [55.1, 621.0], [55.2, 621.0], [55.3, 621.0], [55.4, 621.0], [55.5, 621.0], [55.6, 621.0], [55.7, 621.0], [55.8, 623.0], [55.9, 623.0], [56.0, 623.0], [56.1, 623.0], [56.2, 623.0], [56.3, 623.0], [56.4, 623.0], [56.5, 623.0], [56.6, 670.0], [56.7, 670.0], [56.8, 670.0], [56.9, 670.0], [57.0, 670.0], [57.1, 670.0], [57.2, 670.0], [57.3, 670.0], [57.4, 692.0], [57.5, 692.0], [57.6, 692.0], [57.7, 692.0], [57.8, 692.0], [57.9, 692.0], [58.0, 692.0], [58.1, 692.0], [58.2, 718.0], [58.3, 718.0], [58.4, 718.0], [58.5, 718.0], [58.6, 718.0], [58.7, 718.0], [58.8, 718.0], [58.9, 718.0], [59.0, 718.0], [59.1, 740.0], [59.2, 740.0], [59.3, 740.0], [59.4, 740.0], [59.5, 740.0], [59.6, 740.0], [59.7, 740.0], [59.8, 740.0], [59.9, 766.0], [60.0, 766.0], [60.1, 766.0], [60.2, 766.0], [60.3, 766.0], [60.4, 766.0], [60.5, 766.0], [60.6, 766.0], [60.7, 767.0], [60.8, 767.0], [60.9, 767.0], [61.0, 767.0], [61.1, 767.0], [61.2, 767.0], [61.3, 767.0], [61.4, 767.0], [61.5, 770.0], [61.6, 770.0], [61.7, 770.0], [61.8, 770.0], [61.9, 770.0], [62.0, 770.0], [62.1, 770.0], [62.2, 770.0], [62.3, 779.0], [62.4, 779.0], [62.5, 779.0], [62.6, 779.0], [62.7, 779.0], [62.8, 779.0], [62.9, 779.0], [63.0, 779.0], [63.1, 779.0], [63.2, 779.0], [63.3, 779.0], [63.4, 779.0], [63.5, 779.0], [63.6, 779.0], [63.7, 779.0], [63.8, 779.0], [63.9, 779.0], [64.0, 779.0], [64.1, 779.0], [64.2, 779.0], [64.3, 779.0], [64.4, 779.0], [64.5, 779.0], [64.6, 779.0], [64.7, 779.0], [64.8, 788.0], [64.9, 788.0], [65.0, 788.0], [65.1, 788.0], [65.2, 788.0], [65.3, 788.0], [65.4, 788.0], [65.5, 788.0], [65.6, 813.0], [65.7, 813.0], [65.8, 813.0], [65.9, 813.0], [66.0, 813.0], [66.1, 813.0], [66.2, 813.0], [66.3, 813.0], [66.4, 835.0], [66.5, 835.0], [66.6, 835.0], [66.7, 835.0], [66.8, 835.0], [66.9, 835.0], [67.0, 835.0], [67.1, 835.0], [67.2, 835.0], [67.3, 861.0], [67.4, 861.0], [67.5, 861.0], [67.6, 861.0], [67.7, 861.0], [67.8, 861.0], [67.9, 861.0], [68.0, 861.0], [68.1, 881.0], [68.2, 881.0], [68.3, 881.0], [68.4, 881.0], [68.5, 881.0], [68.6, 881.0], [68.7, 881.0], [68.8, 881.0], [68.9, 911.0], [69.0, 911.0], [69.1, 911.0], [69.2, 911.0], [69.3, 911.0], [69.4, 911.0], [69.5, 911.0], [69.6, 911.0], [69.7, 930.0], [69.8, 930.0], [69.9, 930.0], [70.0, 930.0], [70.1, 930.0], [70.2, 930.0], [70.3, 930.0], [70.4, 930.0], [70.5, 956.0], [70.6, 956.0], [70.7, 956.0], [70.8, 956.0], [70.9, 956.0], [71.0, 956.0], [71.1, 956.0], [71.2, 956.0], [71.3, 956.0], [71.4, 971.0], [71.5, 971.0], [71.6, 971.0], [71.7, 971.0], [71.8, 971.0], [71.9, 971.0], [72.0, 971.0], [72.1, 971.0], [72.2, 974.0], [72.3, 974.0], [72.4, 974.0], [72.5, 974.0], [72.6, 974.0], [72.7, 974.0], [72.8, 974.0], [72.9, 974.0], [73.0, 974.0], [73.1, 974.0], [73.2, 974.0], [73.3, 974.0], [73.4, 974.0], [73.5, 974.0], [73.6, 974.0], [73.7, 974.0], [73.8, 976.0], [73.9, 976.0], [74.0, 976.0], [74.1, 976.0], [74.2, 976.0], [74.3, 976.0], [74.4, 976.0], [74.5, 976.0], [74.6, 976.0], [74.7, 976.0], [74.8, 976.0], [74.9, 976.0], [75.0, 976.0], [75.1, 976.0], [75.2, 976.0], [75.3, 976.0], [75.4, 976.0], [75.5, 979.0], [75.6, 979.0], [75.7, 979.0], [75.8, 979.0], [75.9, 979.0], [76.0, 979.0], [76.1, 979.0], [76.2, 979.0], [76.3, 980.0], [76.4, 980.0], [76.5, 980.0], [76.6, 980.0], [76.7, 980.0], [76.8, 980.0], [76.9, 980.0], [77.0, 980.0], [77.1, 981.0], [77.2, 981.0], [77.3, 981.0], [77.4, 981.0], [77.5, 981.0], [77.6, 981.0], [77.7, 981.0], [77.8, 981.0], [77.9, 981.0], [78.0, 981.0], [78.1, 981.0], [78.2, 981.0], [78.3, 981.0], [78.4, 981.0], [78.5, 981.0], [78.6, 981.0], [78.7, 981.0], [78.8, 981.0], [78.9, 981.0], [79.0, 981.0], [79.1, 981.0], [79.2, 981.0], [79.3, 981.0], [79.4, 981.0], [79.5, 981.0], [79.6, 1005.0], [79.7, 1005.0], [79.8, 1005.0], [79.9, 1005.0], [80.0, 1005.0], [80.1, 1005.0], [80.2, 1005.0], [80.3, 1005.0], [80.4, 1017.0], [80.5, 1017.0], [80.6, 1017.0], [80.7, 1017.0], [80.8, 1017.0], [80.9, 1017.0], [81.0, 1017.0], [81.1, 1017.0], [81.2, 1026.0], [81.3, 1026.0], [81.4, 1026.0], [81.5, 1026.0], [81.6, 1026.0], [81.7, 1026.0], [81.8, 1026.0], [81.9, 1026.0], [82.0, 1053.0], [82.1, 1053.0], [82.2, 1053.0], [82.3, 1053.0], [82.4, 1053.0], [82.5, 1053.0], [82.6, 1053.0], [82.7, 1053.0], [82.8, 1066.0], [82.9, 1066.0], [83.0, 1066.0], [83.1, 1066.0], [83.2, 1066.0], [83.3, 1066.0], [83.4, 1066.0], [83.5, 1066.0], [83.6, 1066.0], [83.7, 1075.0], [83.8, 1075.0], [83.9, 1075.0], [84.0, 1075.0], [84.1, 1075.0], [84.2, 1075.0], [84.3, 1075.0], [84.4, 1075.0], [84.5, 1115.0], [84.6, 1115.0], [84.7, 1115.0], [84.8, 1115.0], [84.9, 1115.0], [85.0, 1115.0], [85.1, 1115.0], [85.2, 1115.0], [85.3, 1122.0], [85.4, 1122.0], [85.5, 1122.0], [85.6, 1122.0], [85.7, 1122.0], [85.8, 1122.0], [85.9, 1122.0], [86.0, 1122.0], [86.1, 1161.0], [86.2, 1161.0], [86.3, 1161.0], [86.4, 1161.0], [86.5, 1161.0], [86.6, 1161.0], [86.7, 1161.0], [86.8, 1161.0], [86.9, 1168.0], [87.0, 1168.0], [87.1, 1168.0], [87.2, 1168.0], [87.3, 1168.0], [87.4, 1168.0], [87.5, 1168.0], [87.6, 1168.0], [87.7, 1168.0], [87.8, 1211.0], [87.9, 1211.0], [88.0, 1211.0], [88.1, 1211.0], [88.2, 1211.0], [88.3, 1211.0], [88.4, 1211.0], [88.5, 1211.0], [88.6, 1219.0], [88.7, 1219.0], [88.8, 1219.0], [88.9, 1219.0], [89.0, 1219.0], [89.1, 1219.0], [89.2, 1219.0], [89.3, 1219.0], [89.4, 1256.0], [89.5, 1256.0], [89.6, 1256.0], [89.7, 1256.0], [89.8, 1256.0], [89.9, 1256.0], [90.0, 1256.0], [90.1, 1256.0], [90.2, 1265.0], [90.3, 1265.0], [90.4, 1265.0], [90.5, 1265.0], [90.6, 1265.0], [90.7, 1265.0], [90.8, 1265.0], [90.9, 1265.0], [91.0, 1314.0], [91.1, 1314.0], [91.2, 1314.0], [91.3, 1314.0], [91.4, 1314.0], [91.5, 1314.0], [91.6, 1314.0], [91.7, 1314.0], [91.8, 1314.0], [91.9, 1362.0], [92.0, 1362.0], [92.1, 1362.0], [92.2, 1362.0], [92.3, 1362.0], [92.4, 1362.0], [92.5, 1362.0], [92.6, 1362.0], [92.7, 1973.0], [92.8, 1973.0], [92.9, 1973.0], [93.0, 1973.0], [93.1, 1973.0], [93.2, 1973.0], [93.3, 1973.0], [93.4, 1973.0], [93.5, 2013.0], [93.6, 2013.0], [93.7, 2013.0], [93.8, 2013.0], [93.9, 2013.0], [94.0, 2013.0], [94.1, 2013.0], [94.2, 2013.0], [94.3, 2021.0], [94.4, 2021.0], [94.5, 2021.0], [94.6, 2021.0], [94.7, 2021.0], [94.8, 2021.0], [94.9, 2021.0], [95.0, 2021.0], [95.1, 2068.0], [95.2, 2068.0], [95.3, 2068.0], [95.4, 2068.0], [95.5, 2068.0], [95.6, 2068.0], [95.7, 2068.0], [95.8, 2068.0], [95.9, 2068.0], [96.0, 2117.0], [96.1, 2117.0], [96.2, 2117.0], [96.3, 2117.0], [96.4, 2117.0], [96.5, 2117.0], [96.6, 2117.0], [96.7, 2117.0], [96.8, 2163.0], [96.9, 2163.0], [97.0, 2163.0], [97.1, 2163.0], [97.2, 2163.0], [97.3, 2163.0], [97.4, 2163.0], [97.5, 2163.0], [97.6, 2213.0], [97.7, 2213.0], [97.8, 2213.0], [97.9, 2213.0], [98.0, 2213.0], [98.1, 2213.0], [98.2, 2213.0], [98.3, 2213.0], [98.4, 2264.0], [98.5, 2264.0], [98.6, 2264.0], [98.7, 2264.0], [98.8, 2264.0], [98.9, 2264.0], [99.0, 2264.0], [99.1, 2264.0], [99.2, 2305.0], [99.3, 2305.0], [99.4, 2305.0], [99.5, 2305.0], [99.6, 2305.0], [99.7, 2305.0], [99.8, 2305.0], [99.9, 2305.0], [100.0, 2305.0]], "isOverall": false, "label": "api contactos", "isController": false}, {"data": [[0.0, 64.0], [0.1, 64.0], [0.2, 64.0], [0.3, 64.0], [0.4, 64.0], [0.5, 64.0], [0.6, 64.0], [0.7, 64.0], [0.8, 64.0], [0.9, 64.0], [1.0, 64.0], [1.1, 70.0], [1.2, 70.0], [1.3, 70.0], [1.4, 70.0], [1.5, 70.0], [1.6, 70.0], [1.7, 70.0], [1.8, 70.0], [1.9, 70.0], [2.0, 70.0], [2.1, 75.0], [2.2, 75.0], [2.3, 75.0], [2.4, 75.0], [2.5, 75.0], [2.6, 75.0], [2.7, 75.0], [2.8, 75.0], [2.9, 75.0], [3.0, 75.0], [3.1, 119.0], [3.2, 119.0], [3.3, 119.0], [3.4, 119.0], [3.5, 119.0], [3.6, 119.0], [3.7, 119.0], [3.8, 119.0], [3.9, 119.0], [4.0, 119.0], [4.1, 123.0], [4.2, 123.0], [4.3, 123.0], [4.4, 123.0], [4.5, 123.0], [4.6, 123.0], [4.7, 123.0], [4.8, 123.0], [4.9, 123.0], [5.0, 123.0], [5.1, 123.0], [5.2, 124.0], [5.3, 124.0], [5.4, 124.0], [5.5, 124.0], [5.6, 124.0], [5.7, 124.0], [5.8, 124.0], [5.9, 124.0], [6.0, 124.0], [6.1, 124.0], [6.2, 125.0], [6.3, 125.0], [6.4, 125.0], [6.5, 125.0], [6.6, 125.0], [6.7, 125.0], [6.8, 125.0], [6.9, 125.0], [7.0, 125.0], [7.1, 125.0], [7.2, 134.0], [7.3, 134.0], [7.4, 134.0], [7.5, 134.0], [7.6, 134.0], [7.7, 134.0], [7.8, 134.0], [7.9, 134.0], [8.0, 134.0], [8.1, 134.0], [8.2, 137.0], [8.3, 137.0], [8.4, 137.0], [8.5, 137.0], [8.6, 137.0], [8.7, 137.0], [8.8, 137.0], [8.9, 137.0], [9.0, 137.0], [9.1, 137.0], [9.2, 167.0], [9.3, 167.0], [9.4, 167.0], [9.5, 167.0], [9.6, 167.0], [9.7, 167.0], [9.8, 167.0], [9.9, 167.0], [10.0, 167.0], [10.1, 167.0], [10.2, 167.0], [10.3, 177.0], [10.4, 177.0], [10.5, 177.0], [10.6, 177.0], [10.7, 177.0], [10.8, 177.0], [10.9, 177.0], [11.0, 177.0], [11.1, 177.0], [11.2, 177.0], [11.3, 181.0], [11.4, 181.0], [11.5, 181.0], [11.6, 181.0], [11.7, 181.0], [11.8, 181.0], [11.9, 181.0], [12.0, 181.0], [12.1, 181.0], [12.2, 181.0], [12.3, 182.0], [12.4, 182.0], [12.5, 182.0], [12.6, 182.0], [12.7, 182.0], [12.8, 182.0], [12.9, 182.0], [13.0, 182.0], [13.1, 182.0], [13.2, 182.0], [13.3, 192.0], [13.4, 192.0], [13.5, 192.0], [13.6, 192.0], [13.7, 192.0], [13.8, 192.0], [13.9, 192.0], [14.0, 192.0], [14.1, 192.0], [14.2, 192.0], [14.3, 196.0], [14.4, 196.0], [14.5, 196.0], [14.6, 196.0], [14.7, 196.0], [14.8, 196.0], [14.9, 196.0], [15.0, 196.0], [15.1, 196.0], [15.2, 196.0], [15.3, 196.0], [15.4, 215.0], [15.5, 215.0], [15.6, 215.0], [15.7, 215.0], [15.8, 215.0], [15.9, 215.0], [16.0, 215.0], [16.1, 215.0], [16.2, 215.0], [16.3, 215.0], [16.4, 225.0], [16.5, 225.0], [16.6, 225.0], [16.7, 225.0], [16.8, 225.0], [16.9, 225.0], [17.0, 225.0], [17.1, 225.0], [17.2, 225.0], [17.3, 225.0], [17.4, 237.0], [17.5, 237.0], [17.6, 237.0], [17.7, 237.0], [17.8, 237.0], [17.9, 237.0], [18.0, 237.0], [18.1, 237.0], [18.2, 237.0], [18.3, 237.0], [18.4, 242.0], [18.5, 242.0], [18.6, 242.0], [18.7, 242.0], [18.8, 242.0], [18.9, 242.0], [19.0, 242.0], [19.1, 242.0], [19.2, 242.0], [19.3, 242.0], [19.4, 249.0], [19.5, 249.0], [19.6, 249.0], [19.7, 249.0], [19.8, 249.0], [19.9, 249.0], [20.0, 249.0], [20.1, 249.0], [20.2, 249.0], [20.3, 249.0], [20.4, 249.0], [20.5, 249.0], [20.6, 249.0], [20.7, 249.0], [20.8, 249.0], [20.9, 249.0], [21.0, 249.0], [21.1, 249.0], [21.2, 249.0], [21.3, 249.0], [21.4, 249.0], [21.5, 250.0], [21.6, 250.0], [21.7, 250.0], [21.8, 250.0], [21.9, 250.0], [22.0, 250.0], [22.1, 250.0], [22.2, 250.0], [22.3, 250.0], [22.4, 250.0], [22.5, 262.0], [22.6, 262.0], [22.7, 262.0], [22.8, 262.0], [22.9, 262.0], [23.0, 262.0], [23.1, 262.0], [23.2, 262.0], [23.3, 262.0], [23.4, 262.0], [23.5, 267.0], [23.6, 267.0], [23.7, 267.0], [23.8, 267.0], [23.9, 267.0], [24.0, 267.0], [24.1, 267.0], [24.2, 267.0], [24.3, 267.0], [24.4, 267.0], [24.5, 268.0], [24.6, 268.0], [24.7, 268.0], [24.8, 268.0], [24.9, 268.0], [25.0, 268.0], [25.1, 268.0], [25.2, 268.0], [25.3, 268.0], [25.4, 268.0], [25.5, 268.0], [25.6, 275.0], [25.7, 275.0], [25.8, 275.0], [25.9, 275.0], [26.0, 275.0], [26.1, 275.0], [26.2, 275.0], [26.3, 275.0], [26.4, 275.0], [26.5, 275.0], [26.6, 281.0], [26.7, 281.0], [26.8, 281.0], [26.9, 281.0], [27.0, 281.0], [27.1, 281.0], [27.2, 281.0], [27.3, 281.0], [27.4, 281.0], [27.5, 281.0], [27.6, 307.0], [27.7, 307.0], [27.8, 307.0], [27.9, 307.0], [28.0, 307.0], [28.1, 307.0], [28.2, 307.0], [28.3, 307.0], [28.4, 307.0], [28.5, 307.0], [28.6, 311.0], [28.7, 311.0], [28.8, 311.0], [28.9, 311.0], [29.0, 311.0], [29.1, 311.0], [29.2, 311.0], [29.3, 311.0], [29.4, 311.0], [29.5, 311.0], [29.6, 315.0], [29.7, 315.0], [29.8, 315.0], [29.9, 315.0], [30.0, 315.0], [30.1, 315.0], [30.2, 315.0], [30.3, 315.0], [30.4, 315.0], [30.5, 315.0], [30.6, 315.0], [30.7, 323.0], [30.8, 323.0], [30.9, 323.0], [31.0, 323.0], [31.1, 323.0], [31.2, 323.0], [31.3, 323.0], [31.4, 323.0], [31.5, 323.0], [31.6, 323.0], [31.7, 362.0], [31.8, 362.0], [31.9, 362.0], [32.0, 362.0], [32.1, 362.0], [32.2, 362.0], [32.3, 362.0], [32.4, 362.0], [32.5, 362.0], [32.6, 362.0], [32.7, 366.0], [32.8, 366.0], [32.9, 366.0], [33.0, 366.0], [33.1, 366.0], [33.2, 366.0], [33.3, 366.0], [33.4, 366.0], [33.5, 366.0], [33.6, 366.0], [33.7, 368.0], [33.8, 368.0], [33.9, 368.0], [34.0, 368.0], [34.1, 368.0], [34.2, 368.0], [34.3, 368.0], [34.4, 368.0], [34.5, 368.0], [34.6, 368.0], [34.7, 388.0], [34.8, 388.0], [34.9, 388.0], [35.0, 388.0], [35.1, 388.0], [35.2, 388.0], [35.3, 388.0], [35.4, 388.0], [35.5, 388.0], [35.6, 388.0], [35.7, 388.0], [35.8, 416.0], [35.9, 416.0], [36.0, 416.0], [36.1, 416.0], [36.2, 416.0], [36.3, 416.0], [36.4, 416.0], [36.5, 416.0], [36.6, 416.0], [36.7, 416.0], [36.8, 425.0], [36.9, 425.0], [37.0, 425.0], [37.1, 425.0], [37.2, 425.0], [37.3, 425.0], [37.4, 425.0], [37.5, 425.0], [37.6, 425.0], [37.7, 425.0], [37.8, 425.0], [37.9, 425.0], [38.0, 425.0], [38.1, 425.0], [38.2, 425.0], [38.3, 425.0], [38.4, 425.0], [38.5, 425.0], [38.6, 425.0], [38.7, 425.0], [38.8, 445.0], [38.9, 445.0], [39.0, 445.0], [39.1, 445.0], [39.2, 445.0], [39.3, 445.0], [39.4, 445.0], [39.5, 445.0], [39.6, 445.0], [39.7, 445.0], [39.8, 446.0], [39.9, 446.0], [40.0, 446.0], [40.1, 446.0], [40.2, 446.0], [40.3, 446.0], [40.4, 446.0], [40.5, 446.0], [40.6, 446.0], [40.7, 446.0], [40.8, 446.0], [40.9, 472.0], [41.0, 472.0], [41.1, 472.0], [41.2, 472.0], [41.3, 472.0], [41.4, 472.0], [41.5, 472.0], [41.6, 472.0], [41.7, 472.0], [41.8, 472.0], [41.9, 478.0], [42.0, 478.0], [42.1, 478.0], [42.2, 478.0], [42.3, 478.0], [42.4, 478.0], [42.5, 478.0], [42.6, 478.0], [42.7, 478.0], [42.8, 478.0], [42.9, 485.0], [43.0, 485.0], [43.1, 485.0], [43.2, 485.0], [43.3, 485.0], [43.4, 485.0], [43.5, 485.0], [43.6, 485.0], [43.7, 485.0], [43.8, 485.0], [43.9, 502.0], [44.0, 502.0], [44.1, 502.0], [44.2, 502.0], [44.3, 502.0], [44.4, 502.0], [44.5, 502.0], [44.6, 502.0], [44.7, 502.0], [44.8, 502.0], [44.9, 505.0], [45.0, 505.0], [45.1, 505.0], [45.2, 505.0], [45.3, 505.0], [45.4, 505.0], [45.5, 505.0], [45.6, 505.0], [45.7, 505.0], [45.8, 505.0], [45.9, 505.0], [46.0, 523.0], [46.1, 523.0], [46.2, 523.0], [46.3, 523.0], [46.4, 523.0], [46.5, 523.0], [46.6, 523.0], [46.7, 523.0], [46.8, 523.0], [46.9, 523.0], [47.0, 529.0], [47.1, 529.0], [47.2, 529.0], [47.3, 529.0], [47.4, 529.0], [47.5, 529.0], [47.6, 529.0], [47.7, 529.0], [47.8, 529.0], [47.9, 529.0], [48.0, 530.0], [48.1, 530.0], [48.2, 530.0], [48.3, 530.0], [48.4, 530.0], [48.5, 530.0], [48.6, 530.0], [48.7, 530.0], [48.8, 530.0], [48.9, 530.0], [49.0, 544.0], [49.1, 544.0], [49.2, 544.0], [49.3, 544.0], [49.4, 544.0], [49.5, 544.0], [49.6, 544.0], [49.7, 544.0], [49.8, 544.0], [49.9, 544.0], [50.0, 544.0], [50.1, 558.0], [50.2, 558.0], [50.3, 558.0], [50.4, 558.0], [50.5, 558.0], [50.6, 558.0], [50.7, 558.0], [50.8, 558.0], [50.9, 558.0], [51.0, 558.0], [51.1, 566.0], [51.2, 566.0], [51.3, 566.0], [51.4, 566.0], [51.5, 566.0], [51.6, 566.0], [51.7, 566.0], [51.8, 566.0], [51.9, 566.0], [52.0, 566.0], [52.1, 580.0], [52.2, 580.0], [52.3, 580.0], [52.4, 580.0], [52.5, 580.0], [52.6, 580.0], [52.7, 580.0], [52.8, 580.0], [52.9, 580.0], [53.0, 580.0], [53.1, 586.0], [53.2, 586.0], [53.3, 586.0], [53.4, 586.0], [53.5, 586.0], [53.6, 586.0], [53.7, 586.0], [53.8, 586.0], [53.9, 586.0], [54.0, 586.0], [54.1, 634.0], [54.2, 634.0], [54.3, 634.0], [54.4, 634.0], [54.5, 634.0], [54.6, 634.0], [54.7, 634.0], [54.8, 634.0], [54.9, 634.0], [55.0, 634.0], [55.1, 634.0], [55.2, 639.0], [55.3, 639.0], [55.4, 639.0], [55.5, 639.0], [55.6, 639.0], [55.7, 639.0], [55.8, 639.0], [55.9, 639.0], [56.0, 639.0], [56.1, 639.0], [56.2, 645.0], [56.3, 645.0], [56.4, 645.0], [56.5, 645.0], [56.6, 645.0], [56.7, 645.0], [56.8, 645.0], [56.9, 645.0], [57.0, 645.0], [57.1, 645.0], [57.2, 666.0], [57.3, 666.0], [57.4, 666.0], [57.5, 666.0], [57.6, 666.0], [57.7, 666.0], [57.8, 666.0], [57.9, 666.0], [58.0, 666.0], [58.1, 666.0], [58.2, 691.0], [58.3, 691.0], [58.4, 691.0], [58.5, 691.0], [58.6, 691.0], [58.7, 691.0], [58.8, 691.0], [58.9, 691.0], [59.0, 691.0], [59.1, 691.0], [59.2, 694.0], [59.3, 694.0], [59.4, 694.0], [59.5, 694.0], [59.6, 694.0], [59.7, 694.0], [59.8, 694.0], [59.9, 694.0], [60.0, 694.0], [60.1, 694.0], [60.2, 694.0], [60.3, 701.0], [60.4, 701.0], [60.5, 701.0], [60.6, 701.0], [60.7, 701.0], [60.8, 701.0], [60.9, 701.0], [61.0, 701.0], [61.1, 701.0], [61.2, 701.0], [61.3, 722.0], [61.4, 722.0], [61.5, 722.0], [61.6, 722.0], [61.7, 722.0], [61.8, 722.0], [61.9, 722.0], [62.0, 722.0], [62.1, 722.0], [62.2, 722.0], [62.3, 727.0], [62.4, 727.0], [62.5, 727.0], [62.6, 727.0], [62.7, 727.0], [62.8, 727.0], [62.9, 727.0], [63.0, 727.0], [63.1, 727.0], [63.2, 727.0], [63.3, 748.0], [63.4, 748.0], [63.5, 748.0], [63.6, 748.0], [63.7, 748.0], [63.8, 748.0], [63.9, 748.0], [64.0, 748.0], [64.1, 748.0], [64.2, 748.0], [64.3, 760.0], [64.4, 760.0], [64.5, 760.0], [64.6, 760.0], [64.7, 760.0], [64.8, 760.0], [64.9, 760.0], [65.0, 760.0], [65.1, 760.0], [65.2, 760.0], [65.3, 760.0], [65.4, 764.0], [65.5, 764.0], [65.6, 764.0], [65.7, 764.0], [65.8, 764.0], [65.9, 764.0], [66.0, 764.0], [66.1, 764.0], [66.2, 764.0], [66.3, 764.0], [66.4, 778.0], [66.5, 778.0], [66.6, 778.0], [66.7, 778.0], [66.8, 778.0], [66.9, 778.0], [67.0, 778.0], [67.1, 778.0], [67.2, 778.0], [67.3, 778.0], [67.4, 778.0], [67.5, 778.0], [67.6, 778.0], [67.7, 778.0], [67.8, 778.0], [67.9, 778.0], [68.0, 778.0], [68.1, 778.0], [68.2, 778.0], [68.3, 778.0], [68.4, 814.0], [68.5, 814.0], [68.6, 814.0], [68.7, 814.0], [68.8, 814.0], [68.9, 814.0], [69.0, 814.0], [69.1, 814.0], [69.2, 814.0], [69.3, 814.0], [69.4, 835.0], [69.5, 835.0], [69.6, 835.0], [69.7, 835.0], [69.8, 835.0], [69.9, 835.0], [70.0, 835.0], [70.1, 835.0], [70.2, 835.0], [70.3, 835.0], [70.4, 835.0], [70.5, 870.0], [70.6, 870.0], [70.7, 870.0], [70.8, 870.0], [70.9, 870.0], [71.0, 870.0], [71.1, 870.0], [71.2, 870.0], [71.3, 870.0], [71.4, 870.0], [71.5, 890.0], [71.6, 890.0], [71.7, 890.0], [71.8, 890.0], [71.9, 890.0], [72.0, 890.0], [72.1, 890.0], [72.2, 890.0], [72.3, 890.0], [72.4, 890.0], [72.5, 926.0], [72.6, 926.0], [72.7, 926.0], [72.8, 926.0], [72.9, 926.0], [73.0, 926.0], [73.1, 926.0], [73.2, 926.0], [73.3, 926.0], [73.4, 926.0], [73.5, 948.0], [73.6, 948.0], [73.7, 948.0], [73.8, 948.0], [73.9, 948.0], [74.0, 948.0], [74.1, 948.0], [74.2, 948.0], [74.3, 948.0], [74.4, 948.0], [74.5, 981.0], [74.6, 981.0], [74.7, 981.0], [74.8, 981.0], [74.9, 981.0], [75.0, 981.0], [75.1, 981.0], [75.2, 981.0], [75.3, 981.0], [75.4, 981.0], [75.5, 981.0], [75.6, 995.0], [75.7, 995.0], [75.8, 995.0], [75.9, 995.0], [76.0, 995.0], [76.1, 995.0], [76.2, 995.0], [76.3, 995.0], [76.4, 995.0], [76.5, 995.0], [76.6, 1039.0], [76.7, 1039.0], [76.8, 1039.0], [76.9, 1039.0], [77.0, 1039.0], [77.1, 1039.0], [77.2, 1039.0], [77.3, 1039.0], [77.4, 1039.0], [77.5, 1039.0], [77.6, 1090.0], [77.7, 1090.0], [77.8, 1090.0], [77.9, 1090.0], [78.0, 1090.0], [78.1, 1090.0], [78.2, 1090.0], [78.3, 1090.0], [78.4, 1090.0], [78.5, 1090.0], [78.6, 1147.0], [78.7, 1147.0], [78.8, 1147.0], [78.9, 1147.0], [79.0, 1147.0], [79.1, 1147.0], [79.2, 1147.0], [79.3, 1147.0], [79.4, 1147.0], [79.5, 1147.0], [79.6, 1205.0], [79.7, 1205.0], [79.8, 1205.0], [79.9, 1205.0], [80.0, 1205.0], [80.1, 1205.0], [80.2, 1205.0], [80.3, 1205.0], [80.4, 1205.0], [80.5, 1205.0], [80.6, 1205.0], [80.7, 1259.0], [80.8, 1259.0], [80.9, 1259.0], [81.0, 1259.0], [81.1, 1259.0], [81.2, 1259.0], [81.3, 1259.0], [81.4, 1259.0], [81.5, 1259.0], [81.6, 1259.0], [81.7, 1270.0], [81.8, 1270.0], [81.9, 1270.0], [82.0, 1270.0], [82.1, 1270.0], [82.2, 1270.0], [82.3, 1270.0], [82.4, 1270.0], [82.5, 1270.0], [82.6, 1270.0], [82.7, 1317.0], [82.8, 1317.0], [82.9, 1317.0], [83.0, 1317.0], [83.1, 1317.0], [83.2, 1317.0], [83.3, 1317.0], [83.4, 1317.0], [83.5, 1317.0], [83.6, 1317.0], [83.7, 1318.0], [83.8, 1318.0], [83.9, 1318.0], [84.0, 1318.0], [84.1, 1318.0], [84.2, 1318.0], [84.3, 1318.0], [84.4, 1318.0], [84.5, 1318.0], [84.6, 1318.0], [84.7, 1366.0], [84.8, 1366.0], [84.9, 1366.0], [85.0, 1366.0], [85.1, 1366.0], [85.2, 1366.0], [85.3, 1366.0], [85.4, 1366.0], [85.5, 1366.0], [85.6, 1366.0], [85.7, 1366.0], [85.8, 1384.0], [85.9, 1384.0], [86.0, 1384.0], [86.1, 1384.0], [86.2, 1384.0], [86.3, 1384.0], [86.4, 1384.0], [86.5, 1384.0], [86.6, 1384.0], [86.7, 1384.0], [86.8, 1416.0], [86.9, 1416.0], [87.0, 1416.0], [87.1, 1416.0], [87.2, 1416.0], [87.3, 1416.0], [87.4, 1416.0], [87.5, 1416.0], [87.6, 1416.0], [87.7, 1416.0], [87.8, 1443.0], [87.9, 1443.0], [88.0, 1443.0], [88.1, 1443.0], [88.2, 1443.0], [88.3, 1443.0], [88.4, 1443.0], [88.5, 1443.0], [88.6, 1443.0], [88.7, 1443.0], [88.8, 1462.0], [88.9, 1462.0], [89.0, 1462.0], [89.1, 1462.0], [89.2, 1462.0], [89.3, 1462.0], [89.4, 1462.0], [89.5, 1462.0], [89.6, 1462.0], [89.7, 1462.0], [89.8, 1509.0], [89.9, 1509.0], [90.0, 1509.0], [90.1, 1509.0], [90.2, 1509.0], [90.3, 1509.0], [90.4, 1509.0], [90.5, 1509.0], [90.6, 1509.0], [90.7, 1509.0], [90.8, 1509.0], [90.9, 1566.0], [91.0, 1566.0], [91.1, 1566.0], [91.2, 1566.0], [91.3, 1566.0], [91.4, 1566.0], [91.5, 1566.0], [91.6, 1566.0], [91.7, 1566.0], [91.8, 1566.0], [91.9, 1622.0], [92.0, 1622.0], [92.1, 1622.0], [92.2, 1622.0], [92.3, 1622.0], [92.4, 1622.0], [92.5, 1622.0], [92.6, 1622.0], [92.7, 1622.0], [92.8, 1622.0], [92.9, 1678.0], [93.0, 1678.0], [93.1, 1678.0], [93.2, 1678.0], [93.3, 1678.0], [93.4, 1678.0], [93.5, 1678.0], [93.6, 1678.0], [93.7, 1678.0], [93.8, 1678.0], [93.9, 1734.0], [94.0, 1734.0], [94.1, 1734.0], [94.2, 1734.0], [94.3, 1734.0], [94.4, 1734.0], [94.5, 1734.0], [94.6, 1734.0], [94.7, 1734.0], [94.8, 1734.0], [94.9, 1790.0], [95.0, 1790.0], [95.1, 1790.0], [95.2, 1790.0], [95.3, 1790.0], [95.4, 1790.0], [95.5, 1790.0], [95.6, 1790.0], [95.7, 1790.0], [95.8, 1790.0], [95.9, 1790.0], [96.0, 1848.0], [96.1, 1848.0], [96.2, 1848.0], [96.3, 1848.0], [96.4, 1848.0], [96.5, 1848.0], [96.6, 1848.0], [96.7, 1848.0], [96.8, 1848.0], [96.9, 1848.0], [97.0, 1904.0], [97.1, 1904.0], [97.2, 1904.0], [97.3, 1904.0], [97.4, 1904.0], [97.5, 1904.0], [97.6, 1904.0], [97.7, 1904.0], [97.8, 1904.0], [97.9, 1904.0], [98.0, 1960.0], [98.1, 1960.0], [98.2, 1960.0], [98.3, 1960.0], [98.4, 1960.0], [98.5, 1960.0], [98.6, 1960.0], [98.7, 1960.0], [98.8, 1960.0], [98.9, 1960.0], [99.0, 2014.0], [99.1, 2014.0], [99.2, 2014.0], [99.3, 2014.0], [99.4, 2014.0], [99.5, 2014.0], [99.6, 2014.0], [99.7, 2014.0], [99.8, 2014.0], [99.9, 2014.0]], "isOverall": false, "label": "contactos", "isController": false}, {"data": [[0.0, 70.0], [0.1, 70.0], [0.2, 70.0], [0.3, 70.0], [0.4, 70.0], [0.5, 70.0], [0.6, 70.0], [0.7, 70.0], [0.8, 70.0], [0.9, 70.0], [1.0, 70.0], [1.1, 70.0], [1.2, 70.0], [1.3, 70.0], [1.4, 70.0], [1.5, 70.0], [1.6, 70.0], [1.7, 70.0], [1.8, 70.0], [1.9, 70.0], [2.0, 75.0], [2.1, 75.0], [2.2, 75.0], [2.3, 75.0], [2.4, 75.0], [2.5, 75.0], [2.6, 75.0], [2.7, 75.0], [2.8, 75.0], [2.9, 75.0], [3.0, 75.0], [3.1, 75.0], [3.2, 75.0], [3.3, 75.0], [3.4, 75.0], [3.5, 75.0], [3.6, 75.0], [3.7, 75.0], [3.8, 75.0], [3.9, 75.0], [4.0, 75.0], [4.1, 75.0], [4.2, 75.0], [4.3, 75.0], [4.4, 75.0], [4.5, 75.0], [4.6, 75.0], [4.7, 75.0], [4.8, 75.0], [4.9, 75.0], [5.0, 75.0], [5.1, 75.0], [5.2, 75.0], [5.3, 75.0], [5.4, 75.0], [5.5, 75.0], [5.6, 75.0], [5.7, 75.0], [5.8, 79.0], [5.9, 79.0], [6.0, 79.0], [6.1, 79.0], [6.2, 79.0], [6.3, 79.0], [6.4, 79.0], [6.5, 79.0], [6.6, 79.0], [6.7, 79.0], [6.8, 79.0], [6.9, 79.0], [7.0, 79.0], [7.1, 79.0], [7.2, 79.0], [7.3, 79.0], [7.4, 79.0], [7.5, 79.0], [7.6, 79.0], [7.7, 171.0], [7.8, 171.0], [7.9, 171.0], [8.0, 171.0], [8.1, 171.0], [8.2, 171.0], [8.3, 171.0], [8.4, 171.0], [8.5, 171.0], [8.6, 171.0], [8.7, 171.0], [8.8, 171.0], [8.9, 171.0], [9.0, 171.0], [9.1, 171.0], [9.2, 171.0], [9.3, 171.0], [9.4, 171.0], [9.5, 171.0], [9.6, 171.0], [9.7, 173.0], [9.8, 173.0], [9.9, 173.0], [10.0, 173.0], [10.1, 173.0], [10.2, 173.0], [10.3, 173.0], [10.4, 173.0], [10.5, 173.0], [10.6, 173.0], [10.7, 173.0], [10.8, 173.0], [10.9, 173.0], [11.0, 173.0], [11.1, 173.0], [11.2, 173.0], [11.3, 173.0], [11.4, 173.0], [11.5, 173.0], [11.6, 174.0], [11.7, 174.0], [11.8, 174.0], [11.9, 174.0], [12.0, 174.0], [12.1, 174.0], [12.2, 174.0], [12.3, 174.0], [12.4, 174.0], [12.5, 174.0], [12.6, 174.0], [12.7, 174.0], [12.8, 174.0], [12.9, 174.0], [13.0, 174.0], [13.1, 174.0], [13.2, 174.0], [13.3, 174.0], [13.4, 174.0], [13.5, 175.0], [13.6, 175.0], [13.7, 175.0], [13.8, 175.0], [13.9, 175.0], [14.0, 175.0], [14.1, 175.0], [14.2, 175.0], [14.3, 175.0], [14.4, 175.0], [14.5, 175.0], [14.6, 175.0], [14.7, 175.0], [14.8, 175.0], [14.9, 175.0], [15.0, 175.0], [15.1, 175.0], [15.2, 175.0], [15.3, 175.0], [15.4, 232.0], [15.5, 232.0], [15.6, 232.0], [15.7, 232.0], [15.8, 232.0], [15.9, 232.0], [16.0, 232.0], [16.1, 232.0], [16.2, 232.0], [16.3, 232.0], [16.4, 232.0], [16.5, 232.0], [16.6, 232.0], [16.7, 232.0], [16.8, 232.0], [16.9, 232.0], [17.0, 232.0], [17.1, 232.0], [17.2, 232.0], [17.3, 232.0], [17.4, 309.0], [17.5, 309.0], [17.6, 309.0], [17.7, 309.0], [17.8, 309.0], [17.9, 309.0], [18.0, 309.0], [18.1, 309.0], [18.2, 309.0], [18.3, 309.0], [18.4, 309.0], [18.5, 309.0], [18.6, 309.0], [18.7, 309.0], [18.8, 309.0], [18.9, 309.0], [19.0, 309.0], [19.1, 309.0], [19.2, 309.0], [19.3, 312.0], [19.4, 312.0], [19.5, 312.0], [19.6, 312.0], [19.7, 312.0], [19.8, 312.0], [19.9, 312.0], [20.0, 312.0], [20.1, 312.0], [20.2, 312.0], [20.3, 312.0], [20.4, 312.0], [20.5, 312.0], [20.6, 312.0], [20.7, 312.0], [20.8, 312.0], [20.9, 312.0], [21.0, 312.0], [21.1, 312.0], [21.2, 313.0], [21.3, 313.0], [21.4, 313.0], [21.5, 313.0], [21.6, 313.0], [21.7, 313.0], [21.8, 313.0], [21.9, 313.0], [22.0, 313.0], [22.1, 313.0], [22.2, 313.0], [22.3, 313.0], [22.4, 313.0], [22.5, 313.0], [22.6, 313.0], [22.7, 313.0], [22.8, 313.0], [22.9, 313.0], [23.0, 313.0], [23.1, 313.0], [23.2, 313.0], [23.3, 313.0], [23.4, 313.0], [23.5, 313.0], [23.6, 313.0], [23.7, 313.0], [23.8, 313.0], [23.9, 313.0], [24.0, 313.0], [24.1, 313.0], [24.2, 313.0], [24.3, 313.0], [24.4, 313.0], [24.5, 313.0], [24.6, 313.0], [24.7, 313.0], [24.8, 313.0], [24.9, 313.0], [25.0, 313.0], [25.1, 313.0], [25.2, 313.0], [25.3, 313.0], [25.4, 313.0], [25.5, 313.0], [25.6, 313.0], [25.7, 313.0], [25.8, 313.0], [25.9, 313.0], [26.0, 313.0], [26.1, 313.0], [26.2, 313.0], [26.3, 313.0], [26.4, 313.0], [26.5, 313.0], [26.6, 313.0], [26.7, 313.0], [26.8, 313.0], [26.9, 313.0], [27.0, 313.0], [27.1, 313.0], [27.2, 313.0], [27.3, 313.0], [27.4, 313.0], [27.5, 313.0], [27.6, 313.0], [27.7, 313.0], [27.8, 313.0], [27.9, 313.0], [28.0, 313.0], [28.1, 313.0], [28.2, 313.0], [28.3, 313.0], [28.4, 313.0], [28.5, 313.0], [28.6, 313.0], [28.7, 313.0], [28.8, 313.0], [28.9, 313.0], [29.0, 313.0], [29.1, 313.0], [29.2, 313.0], [29.3, 313.0], [29.4, 313.0], [29.5, 313.0], [29.6, 313.0], [29.7, 313.0], [29.8, 313.0], [29.9, 313.0], [30.0, 313.0], [30.1, 313.0], [30.2, 313.0], [30.3, 313.0], [30.4, 313.0], [30.5, 313.0], [30.6, 313.0], [30.7, 313.0], [30.8, 313.0], [30.9, 313.0], [31.0, 313.0], [31.1, 313.0], [31.2, 313.0], [31.3, 313.0], [31.4, 313.0], [31.5, 313.0], [31.6, 313.0], [31.7, 313.0], [31.8, 313.0], [31.9, 313.0], [32.0, 313.0], [32.1, 313.0], [32.2, 313.0], [32.3, 313.0], [32.4, 313.0], [32.5, 313.0], [32.6, 313.0], [32.7, 368.0], [32.8, 368.0], [32.9, 368.0], [33.0, 368.0], [33.1, 368.0], [33.2, 368.0], [33.3, 368.0], [33.4, 368.0], [33.5, 368.0], [33.6, 368.0], [33.7, 368.0], [33.8, 368.0], [33.9, 368.0], [34.0, 368.0], [34.1, 368.0], [34.2, 368.0], [34.3, 368.0], [34.4, 368.0], [34.5, 368.0], [34.6, 368.0], [34.7, 369.0], [34.8, 369.0], [34.9, 369.0], [35.0, 369.0], [35.1, 369.0], [35.2, 369.0], [35.3, 369.0], [35.4, 369.0], [35.5, 369.0], [35.6, 369.0], [35.7, 369.0], [35.8, 369.0], [35.9, 369.0], [36.0, 369.0], [36.1, 369.0], [36.2, 369.0], [36.3, 369.0], [36.4, 369.0], [36.5, 369.0], [36.6, 385.0], [36.7, 385.0], [36.8, 385.0], [36.9, 385.0], [37.0, 385.0], [37.1, 385.0], [37.2, 385.0], [37.3, 385.0], [37.4, 385.0], [37.5, 385.0], [37.6, 385.0], [37.7, 385.0], [37.8, 385.0], [37.9, 385.0], [38.0, 385.0], [38.1, 385.0], [38.2, 385.0], [38.3, 385.0], [38.4, 385.0], [38.5, 386.0], [38.6, 386.0], [38.7, 386.0], [38.8, 386.0], [38.9, 386.0], [39.0, 386.0], [39.1, 386.0], [39.2, 386.0], [39.3, 386.0], [39.4, 386.0], [39.5, 386.0], [39.6, 386.0], [39.7, 386.0], [39.8, 386.0], [39.9, 386.0], [40.0, 386.0], [40.1, 386.0], [40.2, 386.0], [40.3, 386.0], [40.4, 446.0], [40.5, 446.0], [40.6, 446.0], [40.7, 446.0], [40.8, 446.0], [40.9, 446.0], [41.0, 446.0], [41.1, 446.0], [41.2, 446.0], [41.3, 446.0], [41.4, 446.0], [41.5, 446.0], [41.6, 446.0], [41.7, 446.0], [41.8, 446.0], [41.9, 446.0], [42.0, 446.0], [42.1, 446.0], [42.2, 446.0], [42.3, 446.0], [42.4, 479.0], [42.5, 479.0], [42.6, 479.0], [42.7, 479.0], [42.8, 479.0], [42.9, 479.0], [43.0, 479.0], [43.1, 479.0], [43.2, 479.0], [43.3, 479.0], [43.4, 479.0], [43.5, 479.0], [43.6, 479.0], [43.7, 479.0], [43.8, 479.0], [43.9, 479.0], [44.0, 479.0], [44.1, 479.0], [44.2, 479.0], [44.3, 502.0], [44.4, 502.0], [44.5, 502.0], [44.6, 502.0], [44.7, 502.0], [44.8, 502.0], [44.9, 502.0], [45.0, 502.0], [45.1, 502.0], [45.2, 502.0], [45.3, 502.0], [45.4, 502.0], [45.5, 502.0], [45.6, 502.0], [45.7, 502.0], [45.8, 502.0], [45.9, 502.0], [46.0, 502.0], [46.1, 502.0], [46.2, 502.0], [46.3, 502.0], [46.4, 502.0], [46.5, 502.0], [46.6, 502.0], [46.7, 502.0], [46.8, 502.0], [46.9, 502.0], [47.0, 502.0], [47.1, 502.0], [47.2, 502.0], [47.3, 502.0], [47.4, 502.0], [47.5, 502.0], [47.6, 502.0], [47.7, 502.0], [47.8, 502.0], [47.9, 502.0], [48.0, 502.0], [48.1, 503.0], [48.2, 503.0], [48.3, 503.0], [48.4, 503.0], [48.5, 503.0], [48.6, 503.0], [48.7, 503.0], [48.8, 503.0], [48.9, 503.0], [49.0, 503.0], [49.1, 503.0], [49.2, 503.0], [49.3, 503.0], [49.4, 503.0], [49.5, 503.0], [49.6, 503.0], [49.7, 503.0], [49.8, 503.0], [49.9, 503.0], [50.0, 503.0], [50.1, 503.0], [50.2, 503.0], [50.3, 503.0], [50.4, 503.0], [50.5, 503.0], [50.6, 503.0], [50.7, 503.0], [50.8, 503.0], [50.9, 503.0], [51.0, 503.0], [51.1, 503.0], [51.2, 503.0], [51.3, 503.0], [51.4, 503.0], [51.5, 503.0], [51.6, 503.0], [51.7, 503.0], [51.8, 503.0], [51.9, 503.0], [52.0, 506.0], [52.1, 506.0], [52.2, 506.0], [52.3, 506.0], [52.4, 506.0], [52.5, 506.0], [52.6, 506.0], [52.7, 506.0], [52.8, 506.0], [52.9, 506.0], [53.0, 506.0], [53.1, 506.0], [53.2, 506.0], [53.3, 506.0], [53.4, 506.0], [53.5, 506.0], [53.6, 506.0], [53.7, 506.0], [53.8, 506.0], [53.9, 508.0], [54.0, 508.0], [54.1, 508.0], [54.2, 508.0], [54.3, 508.0], [54.4, 508.0], [54.5, 508.0], [54.6, 508.0], [54.7, 508.0], [54.8, 508.0], [54.9, 508.0], [55.0, 508.0], [55.1, 508.0], [55.2, 508.0], [55.3, 508.0], [55.4, 508.0], [55.5, 508.0], [55.6, 508.0], [55.7, 508.0], [55.8, 526.0], [55.9, 526.0], [56.0, 526.0], [56.1, 526.0], [56.2, 526.0], [56.3, 526.0], [56.4, 526.0], [56.5, 526.0], [56.6, 526.0], [56.7, 526.0], [56.8, 526.0], [56.9, 526.0], [57.0, 526.0], [57.1, 526.0], [57.2, 526.0], [57.3, 526.0], [57.4, 526.0], [57.5, 526.0], [57.6, 526.0], [57.7, 526.0], [57.8, 526.0], [57.9, 526.0], [58.0, 526.0], [58.1, 526.0], [58.2, 526.0], [58.3, 526.0], [58.4, 526.0], [58.5, 526.0], [58.6, 526.0], [58.7, 526.0], [58.8, 526.0], [58.9, 526.0], [59.0, 526.0], [59.1, 526.0], [59.2, 526.0], [59.3, 526.0], [59.4, 526.0], [59.5, 526.0], [59.6, 526.0], [59.7, 530.0], [59.8, 530.0], [59.9, 530.0], [60.0, 530.0], [60.1, 530.0], [60.2, 530.0], [60.3, 530.0], [60.4, 530.0], [60.5, 530.0], [60.6, 530.0], [60.7, 530.0], [60.8, 530.0], [60.9, 530.0], [61.0, 530.0], [61.1, 530.0], [61.2, 530.0], [61.3, 530.0], [61.4, 530.0], [61.5, 530.0], [61.6, 561.0], [61.7, 561.0], [61.8, 561.0], [61.9, 561.0], [62.0, 561.0], [62.1, 561.0], [62.2, 561.0], [62.3, 561.0], [62.4, 561.0], [62.5, 561.0], [62.6, 561.0], [62.7, 561.0], [62.8, 561.0], [62.9, 561.0], [63.0, 561.0], [63.1, 561.0], [63.2, 561.0], [63.3, 561.0], [63.4, 561.0], [63.5, 715.0], [63.6, 715.0], [63.7, 715.0], [63.8, 715.0], [63.9, 715.0], [64.0, 715.0], [64.1, 715.0], [64.2, 715.0], [64.3, 715.0], [64.4, 715.0], [64.5, 715.0], [64.6, 715.0], [64.7, 715.0], [64.8, 715.0], [64.9, 715.0], [65.0, 715.0], [65.1, 715.0], [65.2, 715.0], [65.3, 715.0], [65.4, 719.0], [65.5, 719.0], [65.6, 719.0], [65.7, 719.0], [65.8, 719.0], [65.9, 719.0], [66.0, 719.0], [66.1, 719.0], [66.2, 719.0], [66.3, 719.0], [66.4, 719.0], [66.5, 719.0], [66.6, 719.0], [66.7, 719.0], [66.8, 719.0], [66.9, 719.0], [67.0, 719.0], [67.1, 719.0], [67.2, 719.0], [67.3, 719.0], [67.4, 721.0], [67.5, 721.0], [67.6, 721.0], [67.7, 721.0], [67.8, 721.0], [67.9, 721.0], [68.0, 721.0], [68.1, 721.0], [68.2, 721.0], [68.3, 721.0], [68.4, 721.0], [68.5, 721.0], [68.6, 721.0], [68.7, 721.0], [68.8, 721.0], [68.9, 721.0], [69.0, 721.0], [69.1, 721.0], [69.2, 721.0], [69.3, 745.0], [69.4, 745.0], [69.5, 745.0], [69.6, 745.0], [69.7, 745.0], [69.8, 745.0], [69.9, 745.0], [70.0, 745.0], [70.1, 745.0], [70.2, 745.0], [70.3, 745.0], [70.4, 745.0], [70.5, 745.0], [70.6, 745.0], [70.7, 745.0], [70.8, 745.0], [70.9, 745.0], [71.0, 745.0], [71.1, 745.0], [71.2, 944.0], [71.3, 944.0], [71.4, 944.0], [71.5, 944.0], [71.6, 944.0], [71.7, 944.0], [71.8, 944.0], [71.9, 944.0], [72.0, 944.0], [72.1, 944.0], [72.2, 944.0], [72.3, 944.0], [72.4, 944.0], [72.5, 944.0], [72.6, 944.0], [72.7, 944.0], [72.8, 944.0], [72.9, 944.0], [73.0, 944.0], [73.1, 969.0], [73.2, 969.0], [73.3, 969.0], [73.4, 969.0], [73.5, 969.0], [73.6, 969.0], [73.7, 969.0], [73.8, 969.0], [73.9, 969.0], [74.0, 969.0], [74.1, 969.0], [74.2, 969.0], [74.3, 969.0], [74.4, 969.0], [74.5, 969.0], [74.6, 969.0], [74.7, 969.0], [74.8, 969.0], [74.9, 969.0], [75.0, 970.0], [75.1, 970.0], [75.2, 970.0], [75.3, 970.0], [75.4, 970.0], [75.5, 970.0], [75.6, 970.0], [75.7, 970.0], [75.8, 970.0], [75.9, 970.0], [76.0, 970.0], [76.1, 970.0], [76.2, 970.0], [76.3, 970.0], [76.4, 970.0], [76.5, 970.0], [76.6, 970.0], [76.7, 970.0], [76.8, 970.0], [76.9, 970.0], [77.0, 970.0], [77.1, 970.0], [77.2, 970.0], [77.3, 970.0], [77.4, 970.0], [77.5, 970.0], [77.6, 970.0], [77.7, 970.0], [77.8, 970.0], [77.9, 970.0], [78.0, 970.0], [78.1, 970.0], [78.2, 970.0], [78.3, 970.0], [78.4, 970.0], [78.5, 970.0], [78.6, 970.0], [78.7, 970.0], [78.8, 970.0], [78.9, 970.0], [79.0, 970.0], [79.1, 970.0], [79.2, 970.0], [79.3, 970.0], [79.4, 970.0], [79.5, 970.0], [79.6, 970.0], [79.7, 970.0], [79.8, 970.0], [79.9, 970.0], [80.0, 970.0], [80.1, 970.0], [80.2, 970.0], [80.3, 970.0], [80.4, 970.0], [80.5, 970.0], [80.6, 970.0], [80.7, 970.0], [80.8, 970.0], [80.9, 970.0], [81.0, 970.0], [81.1, 970.0], [81.2, 970.0], [81.3, 970.0], [81.4, 970.0], [81.5, 970.0], [81.6, 970.0], [81.7, 970.0], [81.8, 970.0], [81.9, 970.0], [82.0, 970.0], [82.1, 970.0], [82.2, 970.0], [82.3, 970.0], [82.4, 970.0], [82.5, 970.0], [82.6, 970.0], [82.7, 978.0], [82.8, 978.0], [82.9, 978.0], [83.0, 978.0], [83.1, 978.0], [83.2, 978.0], [83.3, 978.0], [83.4, 978.0], [83.5, 978.0], [83.6, 978.0], [83.7, 978.0], [83.8, 978.0], [83.9, 978.0], [84.0, 978.0], [84.1, 978.0], [84.2, 978.0], [84.3, 978.0], [84.4, 978.0], [84.5, 978.0], [84.6, 978.0], [84.7, 1210.0], [84.8, 1210.0], [84.9, 1210.0], [85.0, 1210.0], [85.1, 1210.0], [85.2, 1210.0], [85.3, 1210.0], [85.4, 1210.0], [85.5, 1210.0], [85.6, 1210.0], [85.7, 1210.0], [85.8, 1210.0], [85.9, 1210.0], [86.0, 1210.0], [86.1, 1210.0], [86.2, 1210.0], [86.3, 1210.0], [86.4, 1210.0], [86.5, 1210.0], [86.6, 1385.0], [86.7, 1385.0], [86.8, 1385.0], [86.9, 1385.0], [87.0, 1385.0], [87.1, 1385.0], [87.2, 1385.0], [87.3, 1385.0], [87.4, 1385.0], [87.5, 1385.0], [87.6, 1385.0], [87.7, 1385.0], [87.8, 1385.0], [87.9, 1385.0], [88.0, 1385.0], [88.1, 1385.0], [88.2, 1385.0], [88.3, 1385.0], [88.4, 1385.0], [88.5, 1385.0], [88.6, 1385.0], [88.7, 1385.0], [88.8, 1385.0], [88.9, 1385.0], [89.0, 1385.0], [89.1, 1385.0], [89.2, 1385.0], [89.3, 1385.0], [89.4, 1385.0], [89.5, 1385.0], [89.6, 1385.0], [89.7, 1385.0], [89.8, 1385.0], [89.9, 1385.0], [90.0, 1385.0], [90.1, 1385.0], [90.2, 1385.0], [90.3, 1385.0], [90.4, 1386.0], [90.5, 1386.0], [90.6, 1386.0], [90.7, 1386.0], [90.8, 1386.0], [90.9, 1386.0], [91.0, 1386.0], [91.1, 1386.0], [91.2, 1386.0], [91.3, 1386.0], [91.4, 1386.0], [91.5, 1386.0], [91.6, 1386.0], [91.7, 1386.0], [91.8, 1386.0], [91.9, 1386.0], [92.0, 1386.0], [92.1, 1386.0], [92.2, 1386.0], [92.3, 1386.0], [92.4, 1442.0], [92.5, 1442.0], [92.6, 1442.0], [92.7, 1442.0], [92.8, 1442.0], [92.9, 1442.0], [93.0, 1442.0], [93.1, 1442.0], [93.2, 1442.0], [93.3, 1442.0], [93.4, 1442.0], [93.5, 1442.0], [93.6, 1442.0], [93.7, 1442.0], [93.8, 1442.0], [93.9, 1442.0], [94.0, 1442.0], [94.1, 1442.0], [94.2, 1442.0], [94.3, 1904.0], [94.4, 1904.0], [94.5, 1904.0], [94.6, 1904.0], [94.7, 1904.0], [94.8, 1904.0], [94.9, 1904.0], [95.0, 1904.0], [95.1, 1904.0], [95.2, 1904.0], [95.3, 1904.0], [95.4, 1904.0], [95.5, 1904.0], [95.6, 1904.0], [95.7, 1904.0], [95.8, 1904.0], [95.9, 1904.0], [96.0, 1904.0], [96.1, 1904.0], [96.2, 2001.0], [96.3, 2001.0], [96.4, 2001.0], [96.5, 2001.0], [96.6, 2001.0], [96.7, 2001.0], [96.8, 2001.0], [96.9, 2001.0], [97.0, 2001.0], [97.1, 2001.0], [97.2, 2001.0], [97.3, 2001.0], [97.4, 2001.0], [97.5, 2001.0], [97.6, 2001.0], [97.7, 2001.0], [97.8, 2001.0], [97.9, 2001.0], [98.0, 2001.0], [98.1, 2002.0], [98.2, 2002.0], [98.3, 2002.0], [98.4, 2002.0], [98.5, 2002.0], [98.6, 2002.0], [98.7, 2002.0], [98.8, 2002.0], [98.9, 2002.0], [99.0, 2002.0], [99.1, 2002.0], [99.2, 2002.0], [99.3, 2002.0], [99.4, 2002.0], [99.5, 2002.0], [99.6, 2002.0], [99.7, 2002.0], [99.8, 2002.0], [99.9, 2002.0]], "isOverall": false, "label": "contactos get one", "isController": false}, {"data": [[0.0, 19.0], [0.1, 19.0], [0.2, 19.0], [0.3, 19.0], [0.4, 19.0], [0.5, 19.0], [0.6, 19.0], [0.7, 19.0], [0.8, 19.0], [0.9, 19.0], [1.0, 19.0], [1.1, 19.0], [1.2, 19.0], [1.3, 19.0], [1.4, 19.0], [1.5, 19.0], [1.6, 19.0], [1.7, 19.0], [1.8, 19.0], [1.9, 19.0], [2.0, 19.0], [2.1, 19.0], [2.2, 19.0], [2.3, 19.0], [2.4, 19.0], [2.5, 19.0], [2.6, 19.0], [2.7, 43.0], [2.8, 43.0], [2.9, 43.0], [3.0, 43.0], [3.1, 43.0], [3.2, 43.0], [3.3, 43.0], [3.4, 43.0], [3.5, 43.0], [3.6, 43.0], [3.7, 43.0], [3.8, 43.0], [3.9, 43.0], [4.0, 43.0], [4.1, 43.0], [4.2, 43.0], [4.3, 43.0], [4.4, 43.0], [4.5, 43.0], [4.6, 43.0], [4.7, 43.0], [4.8, 43.0], [4.9, 43.0], [5.0, 43.0], [5.1, 43.0], [5.2, 43.0], [5.3, 80.0], [5.4, 80.0], [5.5, 80.0], [5.6, 80.0], [5.7, 80.0], [5.8, 80.0], [5.9, 80.0], [6.0, 80.0], [6.1, 80.0], [6.2, 80.0], [6.3, 80.0], [6.4, 80.0], [6.5, 80.0], [6.6, 80.0], [6.7, 80.0], [6.8, 80.0], [6.9, 80.0], [7.0, 80.0], [7.1, 80.0], [7.2, 80.0], [7.3, 80.0], [7.4, 80.0], [7.5, 80.0], [7.6, 80.0], [7.7, 80.0], [7.8, 80.0], [7.9, 112.0], [8.0, 112.0], [8.1, 112.0], [8.2, 112.0], [8.3, 112.0], [8.4, 112.0], [8.5, 112.0], [8.6, 112.0], [8.7, 112.0], [8.8, 112.0], [8.9, 112.0], [9.0, 112.0], [9.1, 112.0], [9.2, 112.0], [9.3, 112.0], [9.4, 112.0], [9.5, 112.0], [9.6, 112.0], [9.7, 112.0], [9.8, 112.0], [9.9, 112.0], [10.0, 112.0], [10.1, 112.0], [10.2, 112.0], [10.3, 112.0], [10.4, 112.0], [10.5, 112.0], [10.6, 113.0], [10.7, 113.0], [10.8, 113.0], [10.9, 113.0], [11.0, 113.0], [11.1, 113.0], [11.2, 113.0], [11.3, 113.0], [11.4, 113.0], [11.5, 113.0], [11.6, 113.0], [11.7, 113.0], [11.8, 113.0], [11.9, 113.0], [12.0, 113.0], [12.1, 113.0], [12.2, 113.0], [12.3, 113.0], [12.4, 113.0], [12.5, 113.0], [12.6, 113.0], [12.7, 113.0], [12.8, 113.0], [12.9, 113.0], [13.0, 113.0], [13.1, 113.0], [13.2, 114.0], [13.3, 114.0], [13.4, 114.0], [13.5, 114.0], [13.6, 114.0], [13.7, 114.0], [13.8, 114.0], [13.9, 114.0], [14.0, 114.0], [14.1, 114.0], [14.2, 114.0], [14.3, 114.0], [14.4, 114.0], [14.5, 114.0], [14.6, 114.0], [14.7, 114.0], [14.8, 114.0], [14.9, 114.0], [15.0, 114.0], [15.1, 114.0], [15.2, 114.0], [15.3, 114.0], [15.4, 114.0], [15.5, 114.0], [15.6, 114.0], [15.7, 114.0], [15.8, 175.0], [15.9, 175.0], [16.0, 175.0], [16.1, 175.0], [16.2, 175.0], [16.3, 175.0], [16.4, 175.0], [16.5, 175.0], [16.6, 175.0], [16.7, 175.0], [16.8, 175.0], [16.9, 175.0], [17.0, 175.0], [17.1, 175.0], [17.2, 175.0], [17.3, 175.0], [17.4, 175.0], [17.5, 175.0], [17.6, 175.0], [17.7, 175.0], [17.8, 175.0], [17.9, 175.0], [18.0, 175.0], [18.1, 175.0], [18.2, 175.0], [18.3, 175.0], [18.4, 175.0], [18.5, 176.0], [18.6, 176.0], [18.7, 176.0], [18.8, 176.0], [18.9, 176.0], [19.0, 176.0], [19.1, 176.0], [19.2, 176.0], [19.3, 176.0], [19.4, 176.0], [19.5, 176.0], [19.6, 176.0], [19.7, 176.0], [19.8, 176.0], [19.9, 176.0], [20.0, 176.0], [20.1, 176.0], [20.2, 176.0], [20.3, 176.0], [20.4, 176.0], [20.5, 176.0], [20.6, 176.0], [20.7, 176.0], [20.8, 176.0], [20.9, 176.0], [21.0, 176.0], [21.1, 220.0], [21.2, 220.0], [21.3, 220.0], [21.4, 220.0], [21.5, 220.0], [21.6, 220.0], [21.7, 220.0], [21.8, 220.0], [21.9, 220.0], [22.0, 220.0], [22.1, 220.0], [22.2, 220.0], [22.3, 220.0], [22.4, 220.0], [22.5, 220.0], [22.6, 220.0], [22.7, 220.0], [22.8, 220.0], [22.9, 220.0], [23.0, 220.0], [23.1, 220.0], [23.2, 220.0], [23.3, 220.0], [23.4, 220.0], [23.5, 220.0], [23.6, 220.0], [23.7, 220.0], [23.8, 220.0], [23.9, 220.0], [24.0, 220.0], [24.1, 220.0], [24.2, 220.0], [24.3, 220.0], [24.4, 220.0], [24.5, 220.0], [24.6, 220.0], [24.7, 220.0], [24.8, 220.0], [24.9, 220.0], [25.0, 220.0], [25.1, 220.0], [25.2, 220.0], [25.3, 220.0], [25.4, 220.0], [25.5, 220.0], [25.6, 220.0], [25.7, 220.0], [25.8, 220.0], [25.9, 220.0], [26.0, 220.0], [26.1, 220.0], [26.2, 220.0], [26.3, 220.0], [26.4, 300.0], [26.5, 300.0], [26.6, 300.0], [26.7, 300.0], [26.8, 300.0], [26.9, 300.0], [27.0, 300.0], [27.1, 300.0], [27.2, 300.0], [27.3, 300.0], [27.4, 300.0], [27.5, 300.0], [27.6, 300.0], [27.7, 300.0], [27.8, 300.0], [27.9, 300.0], [28.0, 300.0], [28.1, 300.0], [28.2, 300.0], [28.3, 300.0], [28.4, 300.0], [28.5, 300.0], [28.6, 300.0], [28.7, 300.0], [28.8, 300.0], [28.9, 300.0], [29.0, 316.0], [29.1, 316.0], [29.2, 316.0], [29.3, 316.0], [29.4, 316.0], [29.5, 316.0], [29.6, 316.0], [29.7, 316.0], [29.8, 316.0], [29.9, 316.0], [30.0, 316.0], [30.1, 316.0], [30.2, 316.0], [30.3, 316.0], [30.4, 316.0], [30.5, 316.0], [30.6, 316.0], [30.7, 316.0], [30.8, 316.0], [30.9, 316.0], [31.0, 316.0], [31.1, 316.0], [31.2, 316.0], [31.3, 316.0], [31.4, 316.0], [31.5, 316.0], [31.6, 356.0], [31.7, 356.0], [31.8, 356.0], [31.9, 356.0], [32.0, 356.0], [32.1, 356.0], [32.2, 356.0], [32.3, 356.0], [32.4, 356.0], [32.5, 356.0], [32.6, 356.0], [32.7, 356.0], [32.8, 356.0], [32.9, 356.0], [33.0, 356.0], [33.1, 356.0], [33.2, 356.0], [33.3, 356.0], [33.4, 356.0], [33.5, 356.0], [33.6, 356.0], [33.7, 356.0], [33.8, 356.0], [33.9, 356.0], [34.0, 356.0], [34.1, 356.0], [34.2, 356.0], [34.3, 446.0], [34.4, 446.0], [34.5, 446.0], [34.6, 446.0], [34.7, 446.0], [34.8, 446.0], [34.9, 446.0], [35.0, 446.0], [35.1, 446.0], [35.2, 446.0], [35.3, 446.0], [35.4, 446.0], [35.5, 446.0], [35.6, 446.0], [35.7, 446.0], [35.8, 446.0], [35.9, 446.0], [36.0, 446.0], [36.1, 446.0], [36.2, 446.0], [36.3, 446.0], [36.4, 446.0], [36.5, 446.0], [36.6, 446.0], [36.7, 446.0], [36.8, 446.0], [36.9, 448.0], [37.0, 448.0], [37.1, 448.0], [37.2, 448.0], [37.3, 448.0], [37.4, 448.0], [37.5, 448.0], [37.6, 448.0], [37.7, 448.0], [37.8, 448.0], [37.9, 448.0], [38.0, 448.0], [38.1, 448.0], [38.2, 448.0], [38.3, 448.0], [38.4, 448.0], [38.5, 448.0], [38.6, 448.0], [38.7, 448.0], [38.8, 448.0], [38.9, 448.0], [39.0, 448.0], [39.1, 448.0], [39.2, 448.0], [39.3, 448.0], [39.4, 448.0], [39.5, 454.0], [39.6, 454.0], [39.7, 454.0], [39.8, 454.0], [39.9, 454.0], [40.0, 454.0], [40.1, 454.0], [40.2, 454.0], [40.3, 454.0], [40.4, 454.0], [40.5, 454.0], [40.6, 454.0], [40.7, 454.0], [40.8, 454.0], [40.9, 454.0], [41.0, 454.0], [41.1, 454.0], [41.2, 454.0], [41.3, 454.0], [41.4, 454.0], [41.5, 454.0], [41.6, 454.0], [41.7, 454.0], [41.8, 454.0], [41.9, 454.0], [42.0, 454.0], [42.1, 454.0], [42.2, 455.0], [42.3, 455.0], [42.4, 455.0], [42.5, 455.0], [42.6, 455.0], [42.7, 455.0], [42.8, 455.0], [42.9, 455.0], [43.0, 455.0], [43.1, 455.0], [43.2, 455.0], [43.3, 455.0], [43.4, 455.0], [43.5, 455.0], [43.6, 455.0], [43.7, 455.0], [43.8, 455.0], [43.9, 455.0], [44.0, 455.0], [44.1, 455.0], [44.2, 455.0], [44.3, 455.0], [44.4, 455.0], [44.5, 455.0], [44.6, 455.0], [44.7, 455.0], [44.8, 457.0], [44.9, 457.0], [45.0, 457.0], [45.1, 457.0], [45.2, 457.0], [45.3, 457.0], [45.4, 457.0], [45.5, 457.0], [45.6, 457.0], [45.7, 457.0], [45.8, 457.0], [45.9, 457.0], [46.0, 457.0], [46.1, 457.0], [46.2, 457.0], [46.3, 457.0], [46.4, 457.0], [46.5, 457.0], [46.6, 457.0], [46.7, 457.0], [46.8, 457.0], [46.9, 457.0], [47.0, 457.0], [47.1, 457.0], [47.2, 457.0], [47.3, 457.0], [47.4, 458.0], [47.5, 458.0], [47.6, 458.0], [47.7, 458.0], [47.8, 458.0], [47.9, 458.0], [48.0, 458.0], [48.1, 458.0], [48.2, 458.0], [48.3, 458.0], [48.4, 458.0], [48.5, 458.0], [48.6, 458.0], [48.7, 458.0], [48.8, 458.0], [48.9, 458.0], [49.0, 458.0], [49.1, 458.0], [49.2, 458.0], [49.3, 458.0], [49.4, 458.0], [49.5, 458.0], [49.6, 458.0], [49.7, 458.0], [49.8, 458.0], [49.9, 458.0], [50.0, 458.0], [50.1, 459.0], [50.2, 459.0], [50.3, 459.0], [50.4, 459.0], [50.5, 459.0], [50.6, 459.0], [50.7, 459.0], [50.8, 459.0], [50.9, 459.0], [51.0, 459.0], [51.1, 459.0], [51.2, 459.0], [51.3, 459.0], [51.4, 459.0], [51.5, 459.0], [51.6, 459.0], [51.7, 459.0], [51.8, 459.0], [51.9, 459.0], [52.0, 459.0], [52.1, 459.0], [52.2, 459.0], [52.3, 459.0], [52.4, 459.0], [52.5, 459.0], [52.6, 459.0], [52.7, 624.0], [52.8, 624.0], [52.9, 624.0], [53.0, 624.0], [53.1, 624.0], [53.2, 624.0], [53.3, 624.0], [53.4, 624.0], [53.5, 624.0], [53.6, 624.0], [53.7, 624.0], [53.8, 624.0], [53.9, 624.0], [54.0, 624.0], [54.1, 624.0], [54.2, 624.0], [54.3, 624.0], [54.4, 624.0], [54.5, 624.0], [54.6, 624.0], [54.7, 624.0], [54.8, 624.0], [54.9, 624.0], [55.0, 624.0], [55.1, 624.0], [55.2, 624.0], [55.3, 626.0], [55.4, 626.0], [55.5, 626.0], [55.6, 626.0], [55.7, 626.0], [55.8, 626.0], [55.9, 626.0], [56.0, 626.0], [56.1, 626.0], [56.2, 626.0], [56.3, 626.0], [56.4, 626.0], [56.5, 626.0], [56.6, 626.0], [56.7, 626.0], [56.8, 626.0], [56.9, 626.0], [57.0, 626.0], [57.1, 626.0], [57.2, 626.0], [57.3, 626.0], [57.4, 626.0], [57.5, 626.0], [57.6, 626.0], [57.7, 626.0], [57.8, 626.0], [57.9, 666.0], [58.0, 666.0], [58.1, 666.0], [58.2, 666.0], [58.3, 666.0], [58.4, 666.0], [58.5, 666.0], [58.6, 666.0], [58.7, 666.0], [58.8, 666.0], [58.9, 666.0], [59.0, 666.0], [59.1, 666.0], [59.2, 666.0], [59.3, 666.0], [59.4, 666.0], [59.5, 666.0], [59.6, 666.0], [59.7, 666.0], [59.8, 666.0], [59.9, 666.0], [60.0, 666.0], [60.1, 666.0], [60.2, 666.0], [60.3, 666.0], [60.4, 666.0], [60.5, 666.0], [60.6, 671.0], [60.7, 671.0], [60.8, 671.0], [60.9, 671.0], [61.0, 671.0], [61.1, 671.0], [61.2, 671.0], [61.3, 671.0], [61.4, 671.0], [61.5, 671.0], [61.6, 671.0], [61.7, 671.0], [61.8, 671.0], [61.9, 671.0], [62.0, 671.0], [62.1, 671.0], [62.2, 671.0], [62.3, 671.0], [62.4, 671.0], [62.5, 671.0], [62.6, 671.0], [62.7, 671.0], [62.8, 671.0], [62.9, 671.0], [63.0, 671.0], [63.1, 671.0], [63.2, 671.0], [63.3, 671.0], [63.4, 671.0], [63.5, 671.0], [63.6, 671.0], [63.7, 671.0], [63.8, 671.0], [63.9, 671.0], [64.0, 671.0], [64.1, 671.0], [64.2, 671.0], [64.3, 671.0], [64.4, 671.0], [64.5, 671.0], [64.6, 671.0], [64.7, 671.0], [64.8, 671.0], [64.9, 671.0], [65.0, 671.0], [65.1, 671.0], [65.2, 671.0], [65.3, 671.0], [65.4, 671.0], [65.5, 671.0], [65.6, 671.0], [65.7, 671.0], [65.8, 672.0], [65.9, 672.0], [66.0, 672.0], [66.1, 672.0], [66.2, 672.0], [66.3, 672.0], [66.4, 672.0], [66.5, 672.0], [66.6, 672.0], [66.7, 672.0], [66.8, 672.0], [66.9, 672.0], [67.0, 672.0], [67.1, 672.0], [67.2, 672.0], [67.3, 672.0], [67.4, 672.0], [67.5, 672.0], [67.6, 672.0], [67.7, 672.0], [67.8, 672.0], [67.9, 672.0], [68.0, 672.0], [68.1, 672.0], [68.2, 672.0], [68.3, 672.0], [68.4, 672.0], [68.5, 708.0], [68.6, 708.0], [68.7, 708.0], [68.8, 708.0], [68.9, 708.0], [69.0, 708.0], [69.1, 708.0], [69.2, 708.0], [69.3, 708.0], [69.4, 708.0], [69.5, 708.0], [69.6, 708.0], [69.7, 708.0], [69.8, 708.0], [69.9, 708.0], [70.0, 708.0], [70.1, 708.0], [70.2, 708.0], [70.3, 708.0], [70.4, 708.0], [70.5, 708.0], [70.6, 708.0], [70.7, 708.0], [70.8, 708.0], [70.9, 708.0], [71.0, 708.0], [71.1, 710.0], [71.2, 710.0], [71.3, 710.0], [71.4, 710.0], [71.5, 710.0], [71.6, 710.0], [71.7, 710.0], [71.8, 710.0], [71.9, 710.0], [72.0, 710.0], [72.1, 710.0], [72.2, 710.0], [72.3, 710.0], [72.4, 710.0], [72.5, 710.0], [72.6, 710.0], [72.7, 710.0], [72.8, 710.0], [72.9, 710.0], [73.0, 710.0], [73.1, 710.0], [73.2, 710.0], [73.3, 710.0], [73.4, 710.0], [73.5, 710.0], [73.6, 710.0], [73.7, 710.0], [73.8, 710.0], [73.9, 710.0], [74.0, 710.0], [74.1, 710.0], [74.2, 710.0], [74.3, 710.0], [74.4, 710.0], [74.5, 710.0], [74.6, 710.0], [74.7, 710.0], [74.8, 710.0], [74.9, 710.0], [75.0, 710.0], [75.1, 710.0], [75.2, 710.0], [75.3, 710.0], [75.4, 710.0], [75.5, 710.0], [75.6, 710.0], [75.7, 710.0], [75.8, 710.0], [75.9, 710.0], [76.0, 710.0], [76.1, 710.0], [76.2, 710.0], [76.3, 710.0], [76.4, 712.0], [76.5, 712.0], [76.6, 712.0], [76.7, 712.0], [76.8, 712.0], [76.9, 712.0], [77.0, 712.0], [77.1, 712.0], [77.2, 712.0], [77.3, 712.0], [77.4, 712.0], [77.5, 712.0], [77.6, 712.0], [77.7, 712.0], [77.8, 712.0], [77.9, 712.0], [78.0, 712.0], [78.1, 712.0], [78.2, 712.0], [78.3, 712.0], [78.4, 712.0], [78.5, 712.0], [78.6, 712.0], [78.7, 712.0], [78.8, 712.0], [78.9, 712.0], [79.0, 713.0], [79.1, 713.0], [79.2, 713.0], [79.3, 713.0], [79.4, 713.0], [79.5, 713.0], [79.6, 713.0], [79.7, 713.0], [79.8, 713.0], [79.9, 713.0], [80.0, 713.0], [80.1, 713.0], [80.2, 713.0], [80.3, 713.0], [80.4, 713.0], [80.5, 713.0], [80.6, 713.0], [80.7, 713.0], [80.8, 713.0], [80.9, 713.0], [81.0, 713.0], [81.1, 713.0], [81.2, 713.0], [81.3, 713.0], [81.4, 713.0], [81.5, 713.0], [81.6, 714.0], [81.7, 714.0], [81.8, 714.0], [81.9, 714.0], [82.0, 714.0], [82.1, 714.0], [82.2, 714.0], [82.3, 714.0], [82.4, 714.0], [82.5, 714.0], [82.6, 714.0], [82.7, 714.0], [82.8, 714.0], [82.9, 714.0], [83.0, 714.0], [83.1, 714.0], [83.2, 714.0], [83.3, 714.0], [83.4, 714.0], [83.5, 714.0], [83.6, 714.0], [83.7, 714.0], [83.8, 714.0], [83.9, 714.0], [84.0, 714.0], [84.1, 714.0], [84.2, 714.0], [84.3, 716.0], [84.4, 716.0], [84.5, 716.0], [84.6, 716.0], [84.7, 716.0], [84.8, 716.0], [84.9, 716.0], [85.0, 716.0], [85.1, 716.0], [85.2, 716.0], [85.3, 716.0], [85.4, 716.0], [85.5, 716.0], [85.6, 716.0], [85.7, 716.0], [85.8, 716.0], [85.9, 716.0], [86.0, 716.0], [86.1, 716.0], [86.2, 716.0], [86.3, 716.0], [86.4, 716.0], [86.5, 716.0], [86.6, 716.0], [86.7, 716.0], [86.8, 716.0], [86.9, 755.0], [87.0, 755.0], [87.1, 755.0], [87.2, 755.0], [87.3, 755.0], [87.4, 755.0], [87.5, 755.0], [87.6, 755.0], [87.7, 755.0], [87.8, 755.0], [87.9, 755.0], [88.0, 755.0], [88.1, 755.0], [88.2, 755.0], [88.3, 755.0], [88.4, 755.0], [88.5, 755.0], [88.6, 755.0], [88.7, 755.0], [88.8, 755.0], [88.9, 755.0], [89.0, 755.0], [89.1, 755.0], [89.2, 755.0], [89.3, 755.0], [89.4, 755.0], [89.5, 926.0], [89.6, 926.0], [89.7, 926.0], [89.8, 926.0], [89.9, 926.0], [90.0, 926.0], [90.1, 926.0], [90.2, 926.0], [90.3, 926.0], [90.4, 926.0], [90.5, 926.0], [90.6, 926.0], [90.7, 926.0], [90.8, 926.0], [90.9, 926.0], [91.0, 926.0], [91.1, 926.0], [91.2, 926.0], [91.3, 926.0], [91.4, 926.0], [91.5, 926.0], [91.6, 926.0], [91.7, 926.0], [91.8, 926.0], [91.9, 926.0], [92.0, 926.0], [92.1, 926.0], [92.2, 928.0], [92.3, 928.0], [92.4, 928.0], [92.5, 928.0], [92.6, 928.0], [92.7, 928.0], [92.8, 928.0], [92.9, 928.0], [93.0, 928.0], [93.1, 928.0], [93.2, 928.0], [93.3, 928.0], [93.4, 928.0], [93.5, 928.0], [93.6, 928.0], [93.7, 928.0], [93.8, 928.0], [93.9, 928.0], [94.0, 928.0], [94.1, 928.0], [94.2, 928.0], [94.3, 928.0], [94.4, 928.0], [94.5, 928.0], [94.6, 928.0], [94.7, 928.0], [94.8, 929.0], [94.9, 929.0], [95.0, 929.0], [95.1, 929.0], [95.2, 929.0], [95.3, 929.0], [95.4, 929.0], [95.5, 929.0], [95.6, 929.0], [95.7, 929.0], [95.8, 929.0], [95.9, 929.0], [96.0, 929.0], [96.1, 929.0], [96.2, 929.0], [96.3, 929.0], [96.4, 929.0], [96.5, 929.0], [96.6, 929.0], [96.7, 929.0], [96.8, 929.0], [96.9, 929.0], [97.0, 929.0], [97.1, 929.0], [97.2, 929.0], [97.3, 929.0], [97.4, 930.0], [97.5, 930.0], [97.6, 930.0], [97.7, 930.0], [97.8, 930.0], [97.9, 930.0], [98.0, 930.0], [98.1, 930.0], [98.2, 930.0], [98.3, 930.0], [98.4, 930.0], [98.5, 930.0], [98.6, 930.0], [98.7, 930.0], [98.8, 930.0], [98.9, 930.0], [99.0, 930.0], [99.1, 930.0], [99.2, 930.0], [99.3, 930.0], [99.4, 930.0], [99.5, 930.0], [99.6, 930.0], [99.7, 930.0], [99.8, 930.0], [99.9, 930.0], [100.0, 930.0]], "isOverall": false, "label": "contactos update", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 16.0, "series": [{"data": [[0.0, 9.0], [300.0, 7.0], [600.0, 7.0], [1200.0, 2.0], [1300.0, 2.0], [700.0, 5.0], [100.0, 9.0], [400.0, 7.0], [200.0, 5.0], [800.0, 2.0], [900.0, 2.0], [500.0, 3.0]], "isOverall": false, "label": "contactos pagina", "isController": false}, {"data": [[0.0, 16.0], [2100.0, 2.0], [2300.0, 1.0], [2200.0, 2.0], [600.0, 5.0], [700.0, 9.0], [200.0, 10.0], [800.0, 4.0], [900.0, 13.0], [1000.0, 6.0], [1100.0, 4.0], [300.0, 7.0], [1200.0, 4.0], [1300.0, 2.0], [100.0, 10.0], [400.0, 8.0], [1900.0, 1.0], [500.0, 15.0], [2000.0, 3.0]], "isOverall": false, "label": "api contactos", "isController": false}, {"data": [[0.0, 3.0], [600.0, 6.0], [700.0, 8.0], [200.0, 12.0], [800.0, 4.0], [900.0, 4.0], [1000.0, 2.0], [1100.0, 1.0], [300.0, 8.0], [1200.0, 3.0], [1300.0, 4.0], [1400.0, 3.0], [1500.0, 2.0], [100.0, 12.0], [400.0, 8.0], [1600.0, 2.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 2.0], [500.0, 10.0], [2000.0, 1.0]], "isOverall": false, "label": "contactos", "isController": false}, {"data": [[0.0, 4.0], [700.0, 4.0], [200.0, 1.0], [900.0, 7.0], [300.0, 12.0], [1200.0, 1.0], [1300.0, 3.0], [1400.0, 1.0], [400.0, 2.0], [100.0, 4.0], [1900.0, 1.0], [500.0, 10.0], [2000.0, 2.0]], "isOverall": false, "label": "contactos get one", "isController": false}, {"data": [[0.0, 3.0], [300.0, 3.0], [600.0, 6.0], [700.0, 8.0], [200.0, 2.0], [100.0, 5.0], [400.0, 7.0], [900.0, 4.0]], "isOverall": false, "label": "contactos update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 174.0, "series": [{"data": [[0.0, 174.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 174.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 22.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 58.38648648648648, "minX": 1.71532836E12, "maxY": 58.38648648648648, "series": [{"data": [[1.71532836E12, 58.38648648648648]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71532836E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.0, "maxY": 2305.0, "series": [{"data": [[33.0, 125.0], [34.0, 106.0], [35.0, 1388.0], [46.0, 442.6666666666667], [48.0, 297.5], [50.0, 243.5], [51.0, 88.0], [53.0, 76.0], [57.0, 322.5], [74.0, 689.0], [77.0, 852.0], [82.0, 741.7142857142857], [85.0, 671.0], [87.0, 581.4], [89.0, 452.0], [90.0, 387.3333333333333], [94.0, 424.5], [95.0, 284.25], [26.0, 158.5], [27.0, 32.333333333333336], [29.0, 606.5], [30.0, 1270.0], [31.0, 1326.0]], "isOverall": false, "label": "contactos pagina", "isController": false}, {"data": [[62.899999999999984, 458.3500000000001]], "isOverall": false, "label": "contactos pagina-Aggregated", "isController": false}, {"data": [[2.0, 2021.0], [3.0, 2068.0], [4.0, 2117.0], [5.0, 2163.0], [7.0, 2238.5], [8.0, 2305.0], [9.0, 37.333333333333336], [10.0, 4.0], [11.0, 1008.5], [12.0, 4.0], [13.0, 4.0], [14.0, 4.0], [15.0, 4.0], [23.0, 310.0], [24.0, 278.0], [26.0, 242.2], [27.0, 54.66666666666667], [28.0, 3.0], [29.0, 4.0], [33.0, 148.0], [37.0, 320.0], [45.0, 593.5], [46.0, 527.0], [50.0, 455.875], [51.0, 162.2], [52.0, 91.0], [56.0, 182.0], [57.0, 158.5], [59.0, 1017.0], [58.0, 971.0], [61.0, 1115.0], [60.0, 1066.0], [63.0, 1211.0], [62.0, 1161.0], [65.0, 424.5], [66.0, 475.0], [64.0, 1256.0], [71.0, 974.0], [70.0, 974.0], [72.0, 873.0], [74.0, 873.0], [75.0, 981.0], [73.0, 979.0], [77.0, 779.0], [76.0, 981.0], [80.0, 981.0], [85.0, 1026.1999999999998], [88.0, 520.0], [89.0, 518.3333333333333], [94.0, 718.0666666666666], [1.0, 1973.0]], "isOverall": false, "label": "api contactos", "isController": false}, {"data": [[56.844262295081975, 674.4426229508193]], "isOverall": false, "label": "api contactos-Aggregated", "isController": false}, {"data": [[12.0, 2014.0], [13.0, 1960.0], [15.0, 1904.0], [16.0, 959.0], [17.0, 1790.0], [18.0, 934.0], [19.0, 935.0], [20.0, 923.5], [21.0, 901.5], [22.0, 1509.0], [23.0, 856.0], [24.0, 841.5], [25.0, 820.5], [26.0, 799.5], [27.0, 1270.0], [30.0, 64.0], [31.0, 124.0], [32.0, 182.0], [34.0, 181.0], [35.0, 137.0], [36.0, 196.0], [37.0, 846.0], [39.0, 814.0], [38.0, 1384.0], [40.0, 813.5], [41.0, 815.0], [42.0, 816.0], [43.0, 1090.0], [44.0, 544.0], [45.0, 558.0], [46.0, 566.0], [47.0, 446.0], [49.0, 268.0], [50.0, 323.0], [52.0, 75.0], [53.0, 125.0], [55.0, 123.0], [56.0, 586.0], [57.0, 242.0], [58.0, 119.0], [59.0, 167.0], [60.0, 215.0], [61.0, 262.0], [63.0, 315.0], [64.0, 366.0], [65.0, 425.0], [66.0, 478.0], [67.0, 530.0], [68.0, 580.0], [70.0, 634.0], [71.0, 691.0], [72.0, 748.0], [74.0, 764.0], [75.0, 666.0], [76.0, 722.0], [77.0, 778.0], [79.0, 778.0], [78.0, 1039.0], [80.0, 835.0], [81.0, 935.5], [82.0, 937.0], [83.0, 870.0], [84.0, 726.5], [85.0, 727.0], [87.0, 686.0], [86.0, 701.0], [88.0, 554.5], [90.0, 488.5], [91.0, 402.0], [89.0, 529.0], [92.0, 403.5], [94.0, 375.5], [93.0, 307.0]], "isOverall": false, "label": "contactos", "isController": false}, {"data": [[53.66326530612243, 697.8367346938775]], "isOverall": false, "label": "contactos-Aggregated", "isController": false}, {"data": [[33.0, 1385.0], [32.0, 1386.0], [34.0, 732.0], [36.0, 1442.0], [39.0, 309.0], [40.0, 368.5], [44.0, 508.0], [46.0, 561.0], [47.0, 446.0], [48.0, 385.5], [53.0, 75.0], [57.0, 165.83333333333334], [66.0, 724.5], [67.0, 638.0], [65.0, 970.0], [69.0, 969.0], [68.0, 970.0], [72.0, 745.0], [74.0, 715.0], [78.0, 720.0], [79.0, 978.0], [82.0, 944.0], [90.0, 503.5], [94.0, 502.0], [95.0, 312.8571428571429], [9.0, 2002.0], [10.0, 2001.0], [14.0, 1904.0], [28.0, 1210.0]], "isOverall": false, "label": "contactos get one", "isController": false}, {"data": [[61.80769230769233, 648.25]], "isOverall": false, "label": "contactos get one-Aggregated", "isController": false}, {"data": [[45.0, 714.0], [44.0, 716.0], [46.0, 369.66666666666663], [47.0, 712.0], [49.0, 710.0], [48.0, 710.0], [50.0, 382.66666666666663], [51.0, 399.0], [52.0, 474.5], [53.0, 929.0], [55.0, 926.0], [54.0, 928.0], [56.0, 113.0], [72.0, 497.625], [85.0, 666.0], [87.0, 452.4285714285715], [94.0, 300.0]], "isOverall": false, "label": "contactos update", "isController": false}, {"data": [[63.71052631578947, 494.78947368421063]], "isOverall": false, "label": "contactos update-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 95.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2113.4666666666667, "minX": 1.71532836E12, "maxY": 300251.7, "series": [{"data": [[1.71532836E12, 300251.7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71532836E12, 2113.4666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71532836E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 458.3500000000001, "minX": 1.71532836E12, "maxY": 697.8367346938775, "series": [{"data": [[1.71532836E12, 458.3500000000001]], "isOverall": false, "label": "contactos pagina", "isController": false}, {"data": [[1.71532836E12, 674.4426229508193]], "isOverall": false, "label": "api contactos", "isController": false}, {"data": [[1.71532836E12, 697.8367346938775]], "isOverall": false, "label": "contactos", "isController": false}, {"data": [[1.71532836E12, 648.25]], "isOverall": false, "label": "contactos get one", "isController": false}, {"data": [[1.71532836E12, 494.78947368421063]], "isOverall": false, "label": "contactos update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71532836E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71532836E12, "maxY": 697.6530612244899, "series": [{"data": [[1.71532836E12, 458.3500000000001]], "isOverall": false, "label": "contactos pagina", "isController": false}, {"data": [[1.71532836E12, 674.1967213114752]], "isOverall": false, "label": "api contactos", "isController": false}, {"data": [[1.71532836E12, 697.6530612244899]], "isOverall": false, "label": "contactos", "isController": false}, {"data": [[1.71532836E12, 648.2307692307692]], "isOverall": false, "label": "contactos get one", "isController": false}, {"data": [[1.71532836E12, 0.0]], "isOverall": false, "label": "contactos update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71532836E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71532836E12, "maxY": 1.2950819672131153, "series": [{"data": [[1.71532836E12, 0.0]], "isOverall": false, "label": "contactos pagina", "isController": false}, {"data": [[1.71532836E12, 1.2950819672131153]], "isOverall": false, "label": "api contactos", "isController": false}, {"data": [[1.71532836E12, 0.0]], "isOverall": false, "label": "contactos", "isController": false}, {"data": [[1.71532836E12, 0.0]], "isOverall": false, "label": "contactos get one", "isController": false}, {"data": [[1.71532836E12, 0.0]], "isOverall": false, "label": "contactos update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71532836E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.71532836E12, "maxY": 2305.0, "series": [{"data": [[1.71532836E12, 2305.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71532836E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71532836E12, 1309.6000000000015]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71532836E12, 2177.500000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71532836E12, 519.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71532836E12, 1703.1999999999994]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71532836E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 26.0, "minX": 13.0, "maxY": 1622.0, "series": [{"data": [[39.0, 1622.0], [81.0, 220.0], [44.0, 189.0], [45.0, 626.0], [98.0, 524.0], [50.0, 970.0], [13.0, 26.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 98.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 22.0, "minX": 13.0, "maxY": 1622.0, "series": [{"data": [[39.0, 1622.0], [81.0, 209.0], [44.0, 189.0], [45.0, 610.0], [98.0, 519.0], [50.0, 970.0], [13.0, 22.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 98.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.166666666666667, "minX": 1.71532836E12, "maxY": 6.166666666666667, "series": [{"data": [[1.71532836E12, 6.166666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71532836E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.6333333333333333, "minX": 1.71532836E12, "maxY": 5.533333333333333, "series": [{"data": [[1.71532836E12, 5.533333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71532836E12, 0.6333333333333333]], "isOverall": false, "label": "204", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71532836E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.6333333333333333, "minX": 1.71532836E12, "maxY": 2.033333333333333, "series": [{"data": [[1.71532836E12, 1.0]], "isOverall": false, "label": "contactos pagina-success", "isController": false}, {"data": [[1.71532836E12, 0.6333333333333333]], "isOverall": false, "label": "contactos update-success", "isController": false}, {"data": [[1.71532836E12, 2.033333333333333]], "isOverall": false, "label": "api contactos-success", "isController": false}, {"data": [[1.71532836E12, 1.6333333333333333]], "isOverall": false, "label": "contactos-success", "isController": false}, {"data": [[1.71532836E12, 0.8666666666666667]], "isOverall": false, "label": "contactos get one-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71532836E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.166666666666667, "minX": 1.71532836E12, "maxY": 6.166666666666667, "series": [{"data": [[1.71532836E12, 6.166666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71532836E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

